

*****Begin of Testcase1 Execution*****

Inserting the below elements to the PQ
[100, 1]  [99, 2]  [98, 3]  [97, 4]  [96, 5]  [95, 6]  [94, 7]  [93, 8]  [92, 9]  [91, 10]  [90, 11]  [89, 12]  [88, 13]  [87, 14]  [86, 15]  [85, 16]  [84, 17]  [83, 18]  [82, 19]  [81, 20]  [80, 21]  [79, 22]  [78, 23]  [77, 24]  [76, 25]  [75, 26]  [74, 27]  [73, 28]  [72, 29]  [71, 30]  [70, 31]  [69, 32]  [68, 33]  [67, 34]  [66, 35]  [65, 36]  [64, 37]  [63, 38]  [62, 39]  [61, 40]  [60, 41]  [59, 42]  [58, 43]  [57, 44]  [56, 45]  [55, 46]  [54, 47]  [53, 48]  [52, 49]  [51, 50]  [50, 51]  [49, 52]  [48, 53]  [47, 54]  [46, 55]  [45, 56]  [44, 57]  [43, 58]  [42, 59]  [41, 60]  [40, 61]  [39, 62]  [38, 63]  [37, 64]  [36, 65]  [35, 66]  [34, 67]  [33, 68]  [32, 69]  [31, 70]  [30, 71]  [29, 72]  [28, 73]  [27, 74]  [26, 75]  [25, 76]  [24, 77]  [23, 78]  [22, 79]  [21, 80]  [20, 81]  [19, 82]  [18, 83]  [17, 84]  [16, 85]  [15, 86]  [14, 87]  [13, 88]  [12, 89]  [11, 90]  [10, 91]  [9, 92]  [8, 93]  [7, 94]  [6, 95]  [5, 96]  [4, 97]  [3, 98]  [2, 99]  [1, 100]


Applying the Extract-All-Min operation to PQ
Min Element Extracted is : [ 1, 100]


Inserting the data [1,0] to the PQ

Applying the Extract-All-Min operation to PQ
Min Element Extracted is : [ 1, 0]


*****End of Testcase1 Execution*****


*****Begin of Testcase2 Execution*****

Inserting the below elements to the PQ
[1000, 1] [999, 2] [998, 3] [997, 4] [996, 5] [995, 6] [994, 7] [993, 8] [992, 9] [991, 10] [990, 11] [989, 12] [988, 13] [987, 14] [986, 15] [985, 16] [984, 17] [983, 18] [982, 19] [981, 20] [980, 21] [979, 22] [978, 23] [977, 24] [976, 25] [975, 26] [974, 27] [973, 28] [972, 29] [971, 30] [970, 31] [969, 32] [968, 33] [967, 34] [966, 35] [965, 36] [964, 37] [963, 38] [962, 39] [961, 40] [960, 41] [959, 42] [958, 43] [957, 44] [956, 45] [955, 46] [954, 47] [953, 48] [952, 49] [951, 50] [950, 51] [949, 52] [948, 53] [947, 54] [946, 55] [945, 56] [944, 57] [943, 58] [942, 59] [941, 60] [940, 61] [939, 62] [938, 63] [937, 64] [936, 65] [935, 66] [934, 67] [933, 68] [932, 69] [931, 70] [930, 71] [929, 72] [928, 73] [927, 74] [926, 75] [925, 76] [924, 77] [923, 78] [922, 79] [921, 80] [920, 81] [919, 82] [918, 83] [917, 84] [916, 85] [915, 86] [914, 87] [913, 88] [912, 89] [911, 90] [910, 91] [909, 92] [908, 93] [907, 94] [906, 95] [905, 96] [904, 97] [903, 98] [902, 99] [901, 100] [900, 101] [899, 102] [898, 103] [897, 104] [896, 105] [895, 106] [894, 107] [893, 108] [892, 109] [891, 110] [890, 111] [889, 112] [888, 113] [887, 114] [886, 115] [885, 116] [884, 117] [883, 118] [882, 119] [881, 120] [880, 121] [879, 122] [878, 123] [877, 124] [876, 125] [875, 126] [874, 127] [873, 128] [872, 129] [871, 130] [870, 131] [869, 132] [868, 133] [867, 134] [866, 135] [865, 136] [864, 137] [863, 138] [862, 139] [861, 140] [860, 141] [859, 142] [858, 143] [857, 144] [856, 145] [855, 146] [854, 147] [853, 148] [852, 149] [851, 150] [850, 151] [849, 152] [848, 153] [847, 154] [846, 155] [845, 156] [844, 157] [843, 158] [842, 159] [841, 160] [840, 161] [839, 162] [838, 163] [837, 164] [836, 165] [835, 166] [834, 167] [833, 168] [832, 169] [831, 170] [830, 171] [829, 172] [828, 173] [827, 174] [826, 175] [825, 176] [824, 177] [823, 178] [822, 179] [821, 180] [820, 181] [819, 182] [818, 183] [817, 184] [816, 185] [815, 186] [814, 187] [813, 188] [812, 189] [811, 190] [810, 191] [809, 192] [808, 193] [807, 194] [806, 195] [805, 196] [804, 197] [803, 198] [802, 199] [801, 200] [800, 201] [799, 202] [798, 203] [797, 204] [796, 205] [795, 206] [794, 207] [793, 208] [792, 209] [791, 210] [790, 211] [789, 212] [788, 213] [787, 214] [786, 215] [785, 216] [784, 217] [783, 218] [782, 219] [781, 220] [780, 221] [779, 222] [778, 223] [777, 224] [776, 225] [775, 226] [774, 227] [773, 228] [772, 229] [771, 230] [770, 231] [769, 232] [768, 233] [767, 234] [766, 235] [765, 236] [764, 237] [763, 238] [762, 239] [761, 240] [760, 241] [759, 242] [758, 243] [757, 244] [756, 245] [755, 246] [754, 247] [753, 248] [752, 249] [751, 250] [750, 251] [749, 252] [748, 253] [747, 254] [746, 255] [745, 256] [744, 257] [743, 258] [742, 259] [741, 260] [740, 261] [739, 262] [738, 263] [737, 264] [736, 265] [735, 266] [734, 267] [733, 268] [732, 269] [731, 270] [730, 271] [729, 272] [728, 273] [727, 274] [726, 275] [725, 276] [724, 277] [723, 278] [722, 279] [721, 280] [720, 281] [719, 282] [718, 283] [717, 284] [716, 285] [715, 286] [714, 287] [713, 288] [712, 289] [711, 290] [710, 291] [709, 292] [708, 293] [707, 294] [706, 295] [705, 296] [704, 297] [703, 298] [702, 299] [701, 300] [700, 301] [699, 302] [698, 303] [697, 304] [696, 305] [695, 306] [694, 307] [693, 308] [692, 309] [691, 310] [690, 311] [689, 312] [688, 313] [687, 314] [686, 315] [685, 316] [684, 317] [683, 318] [682, 319] [681, 320] [680, 321] [679, 322] [678, 323] [677, 324] [676, 325] [675, 326] [674, 327] [673, 328] [672, 329] [671, 330] [670, 331] [669, 332] [668, 333] [667, 334] [666, 335] [665, 336] [664, 337] [663, 338] [662, 339] [661, 340] [660, 341] [659, 342] [658, 343] [657, 344] [656, 345] [655, 346] [654, 347] [653, 348] [652, 349] [651, 350] [650, 351] [649, 352] [648, 353] [647, 354] [646, 355] [645, 356] [644, 357] [643, 358] [642, 359] [641, 360] [640, 361] [639, 362] [638, 363] [637, 364] [636, 365] [635, 366] [634, 367] [633, 368] [632, 369] [631, 370] [630, 371] [629, 372] [628, 373] [627, 374] [626, 375] [625, 376] [624, 377] [623, 378] [622, 379] [621, 380] [620, 381] [619, 382] [618, 383] [617, 384] [616, 385] [615, 386] [614, 387] [613, 388] [612, 389] [611, 390] [610, 391] [609, 392] [608, 393] [607, 394] [606, 395] [605, 396] [604, 397] [603, 398] [602, 399] [601, 400] [600, 401] [599, 402] [598, 403] [597, 404] [596, 405] [595, 406] [594, 407] [593, 408] [592, 409] [591, 410] [590, 411] [589, 412] [588, 413] [587, 414] [586, 415] [585, 416] [584, 417] [583, 418] [582, 419] [581, 420] [580, 421] [579, 422] [578, 423] [577, 424] [576, 425] [575, 426] [574, 427] [573, 428] [572, 429] [571, 430] [570, 431] [569, 432] [568, 433] [567, 434] [566, 435] [565, 436] [564, 437] [563, 438] [562, 439] [561, 440] [560, 441] [559, 442] [558, 443] [557, 444] [556, 445] [555, 446] [554, 447] [553, 448] [552, 449] [551, 450] [550, 451] [549, 452] [548, 453] [547, 454] [546, 455] [545, 456] [544, 457] [543, 458] [542, 459] [541, 460] [540, 461] [539, 462] [538, 463] [537, 464] [536, 465] [535, 466] [534, 467] [533, 468] [532, 469] [531, 470] [530, 471] [529, 472] [528, 473] [527, 474] [526, 475] [525, 476] [524, 477] [523, 478] [522, 479] [521, 480] [520, 481] [519, 482] [518, 483] [517, 484] [516, 485] [515, 486] [514, 487] [513, 488] [512, 489] [511, 490] [510, 491] [509, 492] [508, 493] [507, 494] [506, 495] [505, 496] [504, 497] [503, 498] [502, 499] [501, 500] [500, 501] [499, 502] [498, 503] [497, 504] [496, 505] [495, 506] [494, 507] [493, 508] [492, 509] [491, 510] [490, 511] [489, 512] [488, 513] [487, 514] [486, 515] [485, 516] [484, 517] [483, 518] [482, 519] [481, 520] [480, 521] [479, 522] [478, 523] [477, 524] [476, 525] [475, 526] [474, 527] [473, 528] [472, 529] [471, 530] [470, 531] [469, 532] [468, 533] [467, 534] [466, 535] [465, 536] [464, 537] [463, 538] [462, 539] [461, 540] [460, 541] [459, 542] [458, 543] [457, 544] [456, 545] [455, 546] [454, 547] [453, 548] [452, 549] [451, 550] [450, 551] [449, 552] [448, 553] [447, 554] [446, 555] [445, 556] [444, 557] [443, 558] [442, 559] [441, 560] [440, 561] [439, 562] [438, 563] [437, 564] [436, 565] [435, 566] [434, 567] [433, 568] [432, 569] [431, 570] [430, 571] [429, 572] [428, 573] [427, 574] [426, 575] [425, 576] [424, 577] [423, 578] [422, 579] [421, 580] [420, 581] [419, 582] [418, 583] [417, 584] [416, 585] [415, 586] [414, 587] [413, 588] [412, 589] [411, 590] [410, 591] [409, 592] [408, 593] [407, 594] [406, 595] [405, 596] [404, 597] [403, 598] [402, 599] [401, 600] [400, 601] [399, 602] [398, 603] [397, 604] [396, 605] [395, 606] [394, 607] [393, 608] [392, 609] [391, 610] [390, 611] [389, 612] [388, 613] [387, 614] [386, 615] [385, 616] [384, 617] [383, 618] [382, 619] [381, 620] [380, 621] [379, 622] [378, 623] [377, 624] [376, 625] [375, 626] [374, 627] [373, 628] [372, 629] [371, 630] [370, 631] [369, 632] [368, 633] [367, 634] [366, 635] [365, 636] [364, 637] [363, 638] [362, 639] [361, 640] [360, 641] [359, 642] [358, 643] [357, 644] [356, 645] [355, 646] [354, 647] [353, 648] [352, 649] [351, 650] [350, 651] [349, 652] [348, 653] [347, 654] [346, 655] [345, 656] [344, 657] [343, 658] [342, 659] [341, 660] [340, 661] [339, 662] [338, 663] [337, 664] [336, 665] [335, 666] [334, 667] [333, 668] [332, 669] [331, 670] [330, 671] [329, 672] [328, 673] [327, 674] [326, 675] [325, 676] [324, 677] [323, 678] [322, 679] [321, 680] [320, 681] [319, 682] [318, 683] [317, 684] [316, 685] [315, 686] [314, 687] [313, 688] [312, 689] [311, 690] [310, 691] [309, 692] [308, 693] [307, 694] [306, 695] [305, 696] [304, 697] [303, 698] [302, 699] [301, 700] [300, 701] [299, 702] [298, 703] [297, 704] [296, 705] [295, 706] [294, 707] [293, 708] [292, 709] [291, 710] [290, 711] [289, 712] [288, 713] [287, 714] [286, 715] [285, 716] [284, 717] [283, 718] [282, 719] [281, 720] [280, 721] [279, 722] [278, 723] [277, 724] [276, 725] [275, 726] [274, 727] [273, 728] [272, 729] [271, 730] [270, 731] [269, 732] [268, 733] [267, 734] [266, 735] [265, 736] [264, 737] [263, 738] [262, 739] [261, 740] [260, 741] [259, 742] [258, 743] [257, 744] [256, 745] [255, 746] [254, 747] [253, 748] [252, 749] [251, 750] [250, 751] [249, 752] [248, 753] [247, 754] [246, 755] [245, 756] [244, 757] [243, 758] [242, 759] [241, 760] [240, 761] [239, 762] [238, 763] [237, 764] [236, 765] [235, 766] [234, 767] [233, 768] [232, 769] [231, 770] [230, 771] [229, 772] [228, 773] [227, 774] [226, 775] [225, 776] [224, 777] [223, 778] [222, 779] [221, 780] [220, 781] [219, 782] [218, 783] [217, 784] [216, 785] [215, 786] [214, 787] [213, 788] [212, 789] [211, 790] [210, 791] [209, 792] [208, 793] [207, 794] [206, 795] [205, 796] [204, 797] [203, 798] [202, 799] [201, 800] [200, 801] [199, 802] [198, 803] [197, 804] [196, 805] [195, 806] [194, 807] [193, 808] [192, 809] [191, 810] [190, 811] [189, 812] [188, 813] [187, 814] [186, 815] [185, 816] [184, 817] [183, 818] [182, 819] [181, 820] [180, 821] [179, 822] [178, 823] [177, 824] [176, 825] [175, 826] [174, 827] [173, 828] [172, 829] [171, 830] [170, 831] [169, 832] [168, 833] [167, 834] [166, 835] [165, 836] [164, 837] [163, 838] [162, 839] [161, 840] [160, 841] [159, 842] [158, 843] [157, 844] [156, 845] [155, 846] [154, 847] [153, 848] [152, 849] [151, 850] [150, 851] [149, 852] [148, 853] [147, 854] [146, 855] [145, 856] [144, 857] [143, 858] [142, 859] [141, 860] [140, 861] [139, 862] [138, 863] [137, 864] [136, 865] [135, 866] [134, 867] [133, 868] [132, 869] [131, 870] [130, 871] [129, 872] [128, 873] [127, 874] [126, 875] [125, 876] [124, 877] [123, 878] [122, 879] [121, 880] [120, 881] [119, 882] [118, 883] [117, 884] [116, 885] [115, 886] [114, 887] [113, 888] [112, 889] [111, 890] [110, 891] [109, 892] [108, 893] [107, 894] [106, 895] [105, 896] [104, 897] [103, 898] [102, 899] [101, 900] [100, 901] [99, 902] [98, 903] [97, 904] [96, 905] [95, 906] [94, 907] [93, 908] [92, 909] [91, 910] [90, 911] [89, 912] [88, 913] [87, 914] [86, 915] [85, 916] [84, 917] [83, 918] [82, 919] [81, 920] [80, 921] [79, 922] [78, 923] [77, 924] [76, 925] [75, 926] [74, 927] [73, 928] [72, 929] [71, 930] [70, 931] [69, 932] [68, 933] [67, 934] [66, 935] [65, 936] [64, 937] [63, 938] [62, 939] [61, 940] [60, 941] [59, 942] [58, 943] [57, 944] [56, 945] [55, 946] [54, 947] [53, 948] [52, 949] [51, 950] [50, 951] [49, 952] [48, 953] [47, 954] [46, 955] [45, 956] [44, 957] [43, 958] [42, 959] [41, 960] [40, 961] [39, 962] [38, 963] [37, 964] [36, 965] [35, 966] [34, 967] [33, 968] [32, 969] [31, 970] [30, 971] [29, 972] [28, 973] [27, 974] [26, 975] [25, 976] [24, 977] [23, 978] [22, 979] [21, 980] [20, 981] [19, 982] [18, 983] [17, 984] [16, 985] [15, 986] [14, 987] [13, 988] [12, 989] [11, 990] [10, 991] [9, 992] [8, 993] [7, 994] [6, 995] [5, 996] [4, 997] [3, 998] [2, 999] [1, 1000]



Applying the Extract-All-Min operation to PQ
Min Element Extracted is : [ 1, 1000]

Inserting the below elements to the PQ
[1, 1]  [1, 2]  [1, 3]  [1, 4]  [1, 5]  [1, 6]  [1, 7]  [1, 8]  [1, 9]  [1, 10]  [1, 11]  [1, 12]  [1, 13]  [1, 14]  [1, 15]  [1, 16]  [1, 17]  [1, 18]  [1, 19]  [1, 20]  [1, 21]  [1, 22]  [1, 23]  [1, 24]  [1, 25]  [1, 26]  [1, 27]  [1, 28]  [1, 29]  [1, 30]

Applying the Extract-All-Min operation to PQ
Min Element Extracted is : [ 1, 1]
Min Element Extracted is : [ 1, 25]
Min Element Extracted is : [ 1, 26]
Min Element Extracted is : [ 1, 27]
Min Element Extracted is : [ 1, 28]
Min Element Extracted is : [ 1, 29]
Min Element Extracted is : [ 1, 30]
Min Element Extracted is : [ 1, 24]
Min Element Extracted is : [ 1, 2]
Min Element Extracted is : [ 1, 3]
Min Element Extracted is : [ 1, 4]
Min Element Extracted is : [ 1, 20]
Min Element Extracted is : [ 1, 5]
Min Element Extracted is : [ 1, 6]
Min Element Extracted is : [ 1, 7]
Min Element Extracted is : [ 1, 16]
Min Element Extracted is : [ 1, 8]
Min Element Extracted is : [ 1, 9]
Min Element Extracted is : [ 1, 10]
Min Element Extracted is : [ 1, 11]
Min Element Extracted is : [ 1, 12]
Min Element Extracted is : [ 1, 13]
Min Element Extracted is : [ 1, 14]
Min Element Extracted is : [ 1, 15]
Min Element Extracted is : [ 1, 17]
Min Element Extracted is : [ 1, 18]
Min Element Extracted is : [ 1, 19]
Min Element Extracted is : [ 1, 21]
Min Element Extracted is : [ 1, 22]
Min Element Extracted is : [ 1, 23]

Applying the All-Min operation to PQ
Min Element is : [ 2, 999]


*****End of Testcase2 Execution*****


*****Begin of Testcase3 Execution*****
Inserting 500 random elements to PQ
[468, 494] [472, 797] [546, 164] [203, 189] [65, 436] [980, 823] [47, 857] [985, 374] [752, 784] [832, 383] [128, 366] [979, 199] [481, 109] [158, 216] [972, 776] [592, 908] [270, 532] [182, 284] [686, 376] [932, 741] [280, 911] [41, 317] [245, 495] [160, 987] [747, 982] [839, 865] [817, 817] [64, 297] [394, 681] [503, 834] [456, 94] [742, 716] [95, 392] [468, 771] [236, 399] [981, 976] [778, 21] [292, 23] [975, 911] [478, 722] [371, 785] [586, 187] [601, 118] [943, 986] [789, 445] [819, 245] [998, 38] [429, 92] [890, 888] [332, 125] [755, 781] [100, 533] [270, 852] [24, 245] [240, 961] [957, 79] [746, 20] [725, 815] [129, 667] [278, 908] [580, 566] [621, 578] [594, 50] [138, 952] [406, 929] [546, 629] [709, 114] [630, 970] [434, 644] [683, 665] [83, 639] [212, 819] [127, 928] [633, 246] [594, 902] [623, 174] [936, 712] [220, 998] [230, 817] [950, 626] [746, 495] [724, 923] [599, 353] [892, 502] [988, 52] [166, 539] [159, 368] [357, 277] [764, 458] [513, 358] [828, 604] [991, 763] [316, 679] [761, 536] [495, 710] [631, 240] [673, 354] [632, 740] [697, 523] [241, 162] [566, 866] [691, 715] [703, 516] [460, 466] [965, 442] [292, 270] [45, 751] [33, 820] [429, 262] [825, 915] [440, 455] [623, 112] [277, 254] [320, 442] [246, 30] [595, 280] [364, 754] [463, 535] [739, 914] [992, 181] [355, 752] [441, 859] [503, 933] [679, 400] [194, 503] [314, 624] [426, 406] [204, 693] [650, 984] [134, 364] [13, 197] [634, 836] [420, 566] [371, 158] [479, 831] [798, 302] [582, 238] [160, 553] [171, 307] [944, 824] [800, 726] [448, 694] [131, 120] [386, 772] [103, 980] [604, 575] [645, 238] [411, 64] [794, 250] [681, 741] [80, 478] [42, 652] [185, 661] [674, 815] [959, 617] [638, 236] [342, 554] [399, 464] [665, 253] [704, 236] [232, 307] [280, 346] [13, 159] [869, 275] [399, 550] [15, 469] [496, 516] [589, 149] [646, 262] [954, 82] [347, 70] [777, 680] [614, 175] [612, 747] [419, 315] [974, 119] [90, 253] [455, 563] [402, 324] [828, 269] [342, 312] [728, 306] [296, 785] [446, 932] [47, 868] [13, 853] [928, 259] [532, 542] [424, 612] [288, 833] [395, 730] [943, 476] [451, 866] [38, 321] [658, 334] [580, 990] [636, 776] [765, 401] [561, 210] [332, 76] [546, 805] [919, 474] [63, 920] [484, 477] [531, 240] [779, 917] [961, 199] [861, 411] [533, 367] [723, 191] [691, 771] [180, 796] [547, 935] [196, 107] [613, 987] [642, 159] [791, 560] [101, 322] [948, 575] [268, 479] [805, 46] [864, 243] [704, 724] [123, 236] [90, 314] [417, 249] [84, 66] [44, 621] [469, 230] [196, 82] [217, 828] [700, 476] [857, 269] [789, 804] [834, 56] [751, 116] [561, 614] [350, 264] [806, 932] [959, 886] [245, 376] [135, 319] [901, 638] [409, 369] [859, 595] [910, 544] [892, 609] [19, 226] [868, 276] [498, 179] [322, 249] [286, 351] [331, 104] [605, 137] [35, 564] [491, 270] [408, 616] [57, 308] [254, 456] [667, 581] [520, 577] [124, 880] [654, 602] [105, 991] [869, 593] [638, 659] [310, 392] [10, 632] [486, 83] [237, 980] [115, 718] [718, 982] [803, 244] [289, 525] [690, 425] [574, 678] [470, 166] [557, 592] [758, 130] [60, 104] [192, 689] [232, 492] [80, 232] [592, 35] [774, 819] [483, 358] [15, 201] [339, 286] [435, 619] [801, 593] [512, 374] [271, 972] [530, 296] [41, 756] [886, 92] [851, 77] [771, 82] [37, 319] [773, 620] [344, 24] [907, 818] [372, 390] [487, 702] [666, 390] [789, 935] [973, 300] [777, 712] [740, 775] [477, 249] [531, 362] [331, 850] [898, 570] [400, 925] [358, 641] [22, 692] [655, 920] [978, 27] [778, 933] [197, 444] [322, 976] [847, 764] [744, 624] [475, 952] [398, 420] [200, 397] [772, 991] [246, 669] [38, 114] [72, 386] [745, 84] [547, 869] [994, 993] [364, 250] [926, 551] [684, 716] [995, 999] [479, 216] [622, 423] [636, 20] [833, 304] [876, 83] [294, 122] [220, 323] [695, 282] [177, 440] [357, 714] [308, 819] [707, 140] [68, 632] [681, 220] [347, 153] [219, 295] [359, 309] [708, 463] [788, 18] [757, 664] [91, 520] [776, 302] [311, 470] [52, 478] [378, 868] [192, 154] [687, 889] [284, 223] [989, 433] [903, 804] [576, 590] [98, 403] [889, 274] [856, 677] [283, 613] [340, 833] [132, 584] [603, 433] [522, 646] [379, 891] [513, 561] [513, 668] [918, 788] [360, 384] [689, 262] [188, 265] [842, 745] [658, 730] [488, 983] [875, 239] [73, 214] [71, 195] [788, 665] [96, 779] [779, 465] [669, 760] [495, 650] [428, 412] [906, 778] [787, 595] [508, 443] [850, 818] [656, 976] [547, 143] [436, 422] [372, 499] [104, 903] [684, 361] [567, 248] [139, 345] [704, 276] [104, 198] [916, 991] [78, 822] [246, 333] [416, 222] [244, 734] [39, 891] [187, 577] [502, 614] [467, 343] [112, 561] [245, 265] [390, 280] [503, 519] [93, 675] [785, 656] [341, 701] [125, 410] [991, 361] [733, 406] [574, 968] [608, 81] [336, 785] [648, 306] [398, 583] [639, 501] [613, 352] [756, 993] [622, 727] [512, 183] [402, 765] [830, 733] [465, 945] [142, 455] [774, 344] [329, 816] [780, 927] [888, 584] [712, 13] [880, 578] [65, 519] [78, 668] [339, 302] [138, 430] [29, 118] [603, 890] [874, 901] [622, 338] [323, 233] [262, 97] [45, 59] [381, 815] [977, 737] [398, 166] [741, 277] [734, 274] [264, 281] [932, 594] [51, 538] [23, 539] [647, 94] [428, 520] [986, 519] [326, 308] [742, 56] [864, 777] [106, 714] [69, 551] [450, 926] [707, 659] [202, 909] [923, 926] [658, 332] [988, 700] [861, 479] [238, 507] [563, 135] [26, 26] [644, 811] [794, 385] [858, 657] [630, 954] [839, 167] [504, 289] [92, 679] [416, 284] [65, 339] [678, 714] [661, 665] [882, 990] [143, 588] [496, 175] [713, 981]


Applying Extract-all-min Operation 5 times 

#1: Applying the Extract-All-Min operation to PQ
Min Element Extracted is : [ 10, 632]

#2: Applying the Extract-All-Min operation to PQ
Min Element Extracted is : [ 13, 197]
Min Element Extracted is : [ 13, 159]
Min Element Extracted is : [ 13, 853]

#3: Applying the Extract-All-Min operation to PQ
Min Element Extracted is : [ 15, 201]
Min Element Extracted is : [ 15, 469]

#4: Applying the Extract-All-Min operation to PQ
Min Element Extracted is : [ 19, 226]

#5: Applying the Extract-All-Min operation to PQ
Min Element Extracted is : [ 22, 692]

Randomly select an element from PQ [71, 195]

Reducing the key to 5 [5, 195]

Applying the All-Min operation to PQ
Min Element is : [ 5, 195]


*****End of Testcase3 Execution*****


*****Begin of Testcase4 Execution*****

Inserting 500 random elements to PQ
[356, 792] [975, 209] [127, 110] [307, 80] [939, 464] [52, 696] [546, 199] [112, 299] [723, 910] [967, 436] [570, 110] [786, 38] [712, 374] [524, 877] [86, 974] [537, 902] [243, 511] [110, 360] [611, 877] [430, 28] [340, 941] [714, 877] [139, 816] [644, 330] [203, 610] [757, 242] [188, 20] [270, 891] [384, 262] [245, 930] [235, 772] [831, 468] [752, 409] [818, 831] [285, 716] [849, 94] [656, 563] [439, 263] [847, 82] [584, 50] [160, 809] [282, 339] [297, 20] [698, 672] [272, 933] [79, 498] [183, 900] [434, 925] [777, 252] [755, 531] [436, 82] [615, 561] [635, 522] [292, 950] [594, 344] [468, 744] [621, 218] [82, 909] [228, 248] [580, 960] [181, 649] [457, 823] [26, 359] [747, 271] [79, 970] [792, 506] [51, 875] [66, 154] [396, 817] [573, 458] [161, 40] [202, 772] [718, 743] [680, 414] [982, 728] [373, 631] [376, 298] [453, 861] [648, 668] [132, 717] [115, 392] [691, 157] [736, 225] [770, 600] [42, 342] [58, 193] [842, 719] [433, 559] [461, 113] [441, 911] [831, 805] [541, 676] [571, 462] [536, 687] [598, 658] [404, 704] [519, 563] [329, 254] [779, 98] [844, 811] [431, 892] [472, 272] [610, 895] [299, 540] [476, 730] [450, 307] [12, 460] [451, 574] [390, 977] [729, 979] [113, 132] [160, 622] [164, 479] [344, 933] [45, 187] [221, 466] [548, 161] [206, 626] [55, 495] [634, 991] [694, 553] [766, 696] [12, 216] [738, 392] [192, 467] [839, 764] [67, 467] [854, 221] [936, 197] [622, 972] [844, 833] [906, 391] [984, 112] [485, 508] [75, 588] [967, 759] [140, 732] [924, 142] [938, 661] [993, 598] [596, 310] [362, 132] [767, 215] [343, 181] [403, 434] [621, 715] [735, 526] [574, 197] [106, 58] [695, 172] [636, 139] [921, 766] [861, 844] [376, 798] [974, 838] [864, 569] [147, 225] [691, 904] [900, 503] [553, 771] [927, 173] [485, 139] [690, 58] [326, 264] [575, 489] [426, 680] [618, 347] [445, 478] [659, 290] [744, 632] [127, 608] [670, 264] [301, 829] [636, 200] [800, 189] [439, 204] [821, 914] [334, 510] [440, 650] [243, 15] [139, 659] [685, 747] [474, 598] [694, 133] [356, 437] [233, 473] [513, 371] [205, 805] [200, 832] [473, 990] [489, 903] [194, 309] [294, 518] [288, 203] [167, 521] [208, 765] [179, 361] [512, 122] [427, 205] [245, 774] [110, 937] [246, 92] [308, 442] [887, 498] [742, 828] [956, 230] [208, 149] [998, 962] [135, 285] [164, 762] [796, 831] [526, 444] [191, 37] [556, 608] [701, 269] [381, 280] [205, 618] [362, 972] [528, 717] [938, 269] [544, 894] [958, 221] [511, 955] [182, 115] [709, 805] [867, 504] [635, 392] [416, 816] [889, 440] [892, 67] [177, 742] [337, 842] [828, 689] [813, 355] [405, 751] [92, 418] [122, 49] [107, 623] [472, 748] [728, 180] [552, 72] [153, 186] [455, 37] [470, 812] [468, 830] [869, 635] [571, 206] [476, 398] [363, 758] [221, 759] [508, 303] [645, 620] [811, 742] [711, 283] [489, 908] [453, 40] [970, 74] [685, 893] [102, 623] [704, 560] [921, 51] [663, 492] [247, 608] [358, 600] [365, 570] [827, 341] [863, 471] [429, 152] [212, 139] [425, 169] [515, 346] [668, 954] [880, 352] [846, 972] [443, 28] [1000, 364] [69, 662] [324, 306] [738, 150] [374, 102] [710, 670] [902, 51] [140, 330] [193, 812] [929, 86] [449, 443] [891, 117] [396, 770] [459, 711] [741, 371] [729, 218] [203, 266] [349, 986] [40, 86] [135, 404] [648, 836] [73, 549] [355, 673] [870, 16] [953, 798] [92, 401] [709, 451] [508, 105] [221, 436] [284, 430] [275, 481] [639, 468] [737, 978] [453, 767] [532, 56] [639, 179] [360, 703] [719, 705] [844, 588] [711, 274] [385, 271] [665, 93] [191, 642] [657, 871] [546, 409] [300, 811] [880, 407] [278, 616] [853, 199] [382, 385] [714, 21] [554, 74] [192, 272] [769, 504] [328, 949] [768, 181] [688, 901] [734, 347] [542, 390] [217, 87] [268, 977] [366, 147] [383, 112] [232, 705] [301, 82] [89, 15] [562, 111] [548, 744] [843, 785] [716, 170] [733, 952] [342, 890] [853, 75] [236, 863] [924, 913] [419, 660] [889, 775] [798, 740] [878, 498] [444, 647] [570, 992] [130, 132] [103, 668] [344, 414] [453, 529] [52, 654] [480, 384] [21, 332] [918, 248] [195, 320] [160, 82] [448, 517] [847, 714] [256, 202] [211, 691] [840, 772] [682, 438] [372, 253] [106, 706] [657, 27] [234, 700] [671, 183] [552, 683] [505, 939] [399, 168] [727, 27] [240, 174] [534, 556] [879, 780] [748, 558] [939, 65] [329, 99] [494, 169] [342, 68] [344, 468] [85, 46] [636, 224] [219, 656] [375, 715] [594, 242] [351, 789] [259, 60] [432, 261] [84, 779] [510, 300] [336, 448] [356, 134] [537, 318] [293, 348] [376, 627] [806, 920] [664, 441] [612, 873] [96, 978] [65, 159] [219, 876] [416, 938] [926, 838] [198, 478] [616, 176] [768, 943] [615, 592] [545, 620] [900, 828] [958, 744] [455, 241] [141, 587] [672, 744] [459, 237] [721, 984] [855, 408] [859, 270] [345, 262] [577, 12] [730, 661] [178, 497] [603, 261] [89, 616] [350, 457] [444, 307] [201, 367] [539, 332] [944, 679] [544, 871] [384, 264] [854, 238] [141, 190] [968, 476] [442, 544] [947, 640] [204, 594] [137, 276] [323, 685] [882, 663] [610, 794] [961, 279] [160, 968] [80, 103] [646, 614] [965, 499] [347, 296] [727, 478] [477, 172] [422, 909] [184, 369] [549, 379] [431, 154] [123, 744] [307, 473] [876, 907] [267, 314] [655, 417] [281, 725] [980, 395] [338, 944] [362, 675] [239, 89] [152, 706] [720, 565] [93, 895] [402, 110] [742, 301] [254, 855] [513, 29] [796, 388] [404, 62] [692, 58] [939, 441] [773, 918] [305, 111] [861, 657] [254, 568] [214, 397] [743, 925] [430, 826] [297, 300] [926, 38] [591, 648] [883, 103] [145, 678] [951, 539] [209, 120] [588, 147] [30, 360] [64, 794]


Performing 10 Decrease-Key Operation on PQ 

#1: Performing Decrese-Key Operation
 Decreasing the key of random element: [854, 221]
New Element after changing key is: [6, 221]

#2: Performing Decrese-Key Operation
 Decreasing the key of random element: [457, 823]
New Element after changing key is: [7, 823]

#3: Performing Decrese-Key Operation
 Decreasing the key of random element: [665, 93]
New Element after changing key is: [0, 93]

#4: Performing Decrese-Key Operation
 Decreasing the key of random element: [744, 632]
New Element after changing key is: [0, 632]

#5: Performing Decrese-Key Operation
 Decreasing the key of random element: [307, 80]
New Element after changing key is: [6, 80]

#6: Performing Decrese-Key Operation
 Decreasing the key of random element: [552, 72]
New Element after changing key is: [8, 72]

#7: Performing Decrese-Key Operation
 Decreasing the key of random element: [792, 506]
New Element after changing key is: [7, 506]

#8: Performing Decrese-Key Operation
 Decreasing the key of random element: [655, 417]
New Element after changing key is: [6, 417]

#9: Performing Decrese-Key Operation
 Decreasing the key of random element: [451, 574]
New Element after changing key is: [3, 574]

#10: Performing Decrese-Key Operation
 Decreasing the key of random element: [221, 436]
New Element after changing key is: [6, 436]

Performing 10 Extract-Min Operations on PQ 

#1: Performing Extract-All-Min Operation
Min Element Extracted is : [ 0, 93]
Min Element Extracted is : [ 0, 632]

#2: Performing Extract-All-Min Operation
Min Element Extracted is : [ 3, 574]

#3: Performing Extract-All-Min Operation
Min Element Extracted is : [ 6, 80]
Min Element Extracted is : [ 6, 436]
Min Element Extracted is : [ 6, 221]
Min Element Extracted is : [ 6, 417]

#4: Performing Extract-All-Min Operation
Min Element Extracted is : [ 7, 506]
Min Element Extracted is : [ 7, 823]

#5: Performing Extract-All-Min Operation
Min Element Extracted is : [ 8, 72]

#6: Performing Extract-All-Min Operation
Min Element Extracted is : [ 12, 460]
Min Element Extracted is : [ 12, 216]

#7: Performing Extract-All-Min Operation
Min Element Extracted is : [ 21, 332]

#8: Performing Extract-All-Min Operation
Min Element Extracted is : [ 26, 359]

#9: Performing Extract-All-Min Operation
Min Element Extracted is : [ 30, 360]

#10: Performing Extract-All-Min Operation
Min Element Extracted is : [ 40, 86]


*****End of Testcase4 Execution*****


*****Begin of Testcase5 Execution*****

Performing 100 Random Operations on PQ 

#1: Decrease-Key Operation

#2: Decrease-Key Operation

#3: Insert Operation
Inserting random element : [96, 34]to PQ 

#4: Insert Operation
Inserting random element : [17, 95]to PQ 

#5: Extract-All-Min Operation
Min Element Extracted is : [ 17, 95]

#6: Extract-All-Min Operation
Min Element Extracted is : [ 96, 34]

#7: Decrease-Key Operation

#8: Extract-All-Min Operation

#9: Insert Operation
Inserting random element : [30, 51]to PQ 

#10: AllMin Operation
Min Element is : [ 30, 51]

#11: Extract-All-Min Operation
Min Element Extracted is : [ 30, 51]

#12: Extract-All-Min Operation

#13: Decrease-Key Operation

#14: AllMin Operation

#15: Insert Operation
Inserting random element : [34, 69]to PQ 

#16: Decrease-Key Operation
 Decreasing the key of random element: [34, 69]
New Element after changing key is: [31, 69]

#17: Decrease-Key Operation
 Decreasing the key of random element: [31, 69]
New Element after changing key is: [20, 69]

#18: Insert Operation
Inserting random element : [97, 0]to PQ 

#19: Insert Operation
Inserting random element : [61, 96]to PQ 

#20: Extract-All-Min Operation
Min Element Extracted is : [ 20, 69]


Printing the list after 20 operations 
[61,96]  [97,0] 


#21: AllMin Operation
Min Element is : [ 61, 96]

#22: Extract-All-Min Operation
Min Element Extracted is : [ 61, 96]

#23: AllMin Operation
Min Element is : [ 97, 0]

#24: Insert Operation
Inserting random element : [16, 52]to PQ 

#25: Extract-All-Min Operation
Min Element Extracted is : [ 16, 52]

#26: AllMin Operation
Min Element is : [ 97, 0]

#27: Extract-All-Min Operation
Min Element Extracted is : [ 97, 0]

#28: AllMin Operation

#29: Extract-All-Min Operation

#30: AllMin Operation

#31: Decrease-Key Operation

#32: AllMin Operation

#33: Extract-All-Min Operation

#34: Decrease-Key Operation

#35: Decrease-Key Operation

#36: Insert Operation
Inserting random element : [46, 99]to PQ 

#37: Decrease-Key Operation
 Decreasing the key of random element: [46, 99]
New Element after changing key is: [10, 99]

#38: Insert Operation
Inserting random element : [49, 99]to PQ 

#39: Insert Operation
Inserting random element : [89, 13]to PQ 

#40: Insert Operation
Inserting random element : [63, 66]to PQ 


Printing the list after 20 operations 
[10,99]  [49,99]  [89,13]  [63,66] 


#41: Extract-All-Min Operation
Min Element Extracted is : [ 10, 99]

#42: Insert Operation
Inserting random element : [94, 59]to PQ 

#43: Insert Operation
Inserting random element : [76, 84]to PQ 

#44: Decrease-Key Operation
 Decreasing the key of random element: [76, 84]
New Element after changing key is: [2, 84]

#45: Insert Operation
Inserting random element : [84, 39]to PQ 

#46: Extract-All-Min Operation
Min Element Extracted is : [ 2, 84]

#47: Decrease-Key Operation
 Decreasing the key of random element: [49, 99]
New Element after changing key is: [36, 99]

#48: AllMin Operation
Min Element is : [ 36, 99]

#49: Extract-All-Min Operation
Min Element Extracted is : [ 36, 99]

#50: Extract-All-Min Operation
Min Element Extracted is : [ 63, 66]

#51: Extract-All-Min Operation
Min Element Extracted is : [ 84, 39]

#52: Insert Operation
Inserting random element : [78, 64]to PQ 

#53: Decrease-Key Operation
 Decreasing the key of random element: [78, 64]
New Element after changing key is: [51, 64]

#54: Insert Operation
Inserting random element : [34, 69]to PQ 

#55: Decrease-Key Operation
 Decreasing the key of random element: [51, 64]
New Element after changing key is: [25, 64]

#56: AllMin Operation
Min Element is : [ 25, 64]

#57: Insert Operation
Inserting random element : [42, 34]to PQ 

#58: Insert Operation
Inserting random element : [65, 95]to PQ 

#59: Extract-All-Min Operation
Min Element Extracted is : [ 25, 64]

#60: AllMin Operation
Min Element is : [ 34, 69]


Printing the list after 20 operations 
[34,69]  [42,34]  [65,95]  [94,59]  [89,13] 


#61: Insert Operation
Inserting random element : [49, 7]to PQ 

#62: Decrease-Key Operation
 Decreasing the key of random element: [49, 7]
New Element after changing key is: [32, 7]

#63: AllMin Operation
Min Element is : [ 32, 7]

#64: Extract-All-Min Operation
Min Element Extracted is : [ 32, 7]

#65: Insert Operation
Inserting random element : [63, 82]to PQ 

#66: Extract-All-Min Operation
Min Element Extracted is : [ 34, 69]

#67: Decrease-Key Operation
 Decreasing the key of random element: [89, 13]
New Element after changing key is: [32, 13]

#68: AllMin Operation
Min Element is : [ 32, 13]

#69: Extract-All-Min Operation
Min Element Extracted is : [ 32, 13]

#70: Extract-All-Min Operation
Min Element Extracted is : [ 42, 34]

#71: Extract-All-Min Operation
Min Element Extracted is : [ 63, 82]

#72: AllMin Operation
Min Element is : [ 65, 95]

#73: Decrease-Key Operation
 Decreasing the key of random element: [94, 59]
New Element after changing key is: [42, 59]

#74: Decrease-Key Operation
 Decreasing the key of random element: [65, 95]
New Element after changing key is: [35, 95]

#75: Decrease-Key Operation
 Decreasing the key of random element: [35, 95]
New Element after changing key is: [15, 95]

#76: AllMin Operation
Min Element is : [ 15, 95]

#77: Decrease-Key Operation
 Decreasing the key of random element: [15, 95]
New Element after changing key is: [6, 95]

#78: Decrease-Key Operation
 Decreasing the key of random element: [6, 95]
New Element after changing key is: [5, 95]

#79: AllMin Operation
Min Element is : [ 5, 95]

#80: AllMin Operation
Min Element is : [ 5, 95]


Printing the list after 20 operations 
[5,95]  [42,59] 


#81: Extract-All-Min Operation
Min Element Extracted is : [ 5, 95]

#82: AllMin Operation
Min Element is : [ 42, 59]

#83: Insert Operation
Inserting random element : [96, 51]to PQ 

#84: Insert Operation
Inserting random element : [10, 99]to PQ 

#85: AllMin Operation
Min Element is : [ 10, 99]

#86: AllMin Operation
Min Element is : [ 10, 99]

#87: AllMin Operation
Min Element is : [ 10, 99]

#88: Decrease-Key Operation
 Decreasing the key of random element: [10, 99]
New Element after changing key is: [9, 99]

#89: Extract-All-Min Operation
Min Element Extracted is : [ 9, 99]

#90: AllMin Operation
Min Element is : [ 42, 59]

#91: Insert Operation
Inserting random element : [8, 82]to PQ 

#92: Insert Operation
Inserting random element : [26, 95]to PQ 

#93: AllMin Operation
Min Element is : [ 8, 82]

#94: Extract-All-Min Operation
Min Element Extracted is : [ 8, 82]

#95: Decrease-Key Operation
 Decreasing the key of random element: [96, 51]
New Element after changing key is: [17, 51]

#96: Decrease-Key Operation
 Decreasing the key of random element: [42, 59]
New Element after changing key is: [14, 59]

#97: Insert Operation
Inserting random element : [38, 23]to PQ 

#98: AllMin Operation
Min Element is : [ 14, 59]

#99: Extract-All-Min Operation
Min Element Extracted is : [ 14, 59]

#100: Extract-All-Min Operation
Min Element Extracted is : [ 17, 51]


Printing the list after 20 operations 
[26,95]  [38,23] 



*****End of Testcase5 Execution*****


*****Begin of Testcase6 Execution*****

Total number of comparisons among elements performed = 15514
[1, 21, 41, 61, 81, 101, 121, 141, 161, 181, 201, 221, 241, 261, 281, 301, 321, 341, 361, 381, 401, 421, 441, 461, 481, 501, 521, 541, 561, 581, 601, 621, 641, 661, 681, 701, 721, 741, 761, 781, 801, 821, 841, 861, 881, 901, 921, 941, 961, 981, ]


*****End of Testcase6 Execution*****


*****Begin of Testcase7 Execution*****

swapping arr[401] = 402,  arr[1945] = 1946
swapping arr[325] = 326,  arr[1394] = 1395
swapping arr[1366] = 1367,  arr[806] = 807
swapping arr[589] = 590,  arr[456] = 457
swapping arr[1047] = 1048,  arr[795] = 796
swapping arr[1826] = 1827,  arr[784] = 785
swapping arr[803] = 804,  arr[1860] = 1861
swapping arr[840] = 841,  arr[1882] = 1883
swapping arr[155] = 156,  arr[573] = 574
swapping arr[1648] = 1649,  arr[1695] = 1696
Total number of comparisons among elements performed = 6418
[1, 21, 41, 61, 81, 101, 121, 141, 161, 181, 201, 221, 241, 261, 281, 301, 321, 341, 361, 381, 401, 421, 441, 461, 481, 501, 521, 541, 561, 581, 601, 621, 641, 661, 681, 701, 721, 741, 761, 781, 801, 821, 841, 861, 881, 901, 921, 941, 961, 981, 1001, 1021, 1041, 1061, 1081, 1101, 1121, 1141, 1161, 1181, 1201, 1221, 1241, 1261, 1281, 1301, 1321, 1341, 1361, 1381, 1401, 1421, 1441, 1461, 1481, 1501, 1521, 1541, 1561, 1581, 1601, 1621, 1641, 1661, 1681, 1701, 1721, 1741, 1761, 1781, 1801, 1821, 1841, 1861, 1881, 1901, 1921, 1941, 1961, 1981, ]


*****End of Testcase7 Execution*****


*****Begin of Testcase8 Execution*****

Before permuting arr[290] = 291,  arr[505] = 506, arr[946] = 947
After permuting arr[290] = 506,  arr[505] = 947, arr[946] = 291
Before permuting arr[366] = 367,  arr[67] = 68, arr[863] = 864
After permuting arr[366] = 68,  arr[67] = 864, arr[863] = 367
Before permuting arr[104] = 105,  arr[790] = 791, arr[408] = 409
After permuting arr[104] = 791,  arr[790] = 409, arr[408] = 105
Before permuting arr[290] = 506,  arr[768] = 769, arr[161] = 162
After permuting arr[290] = 769,  arr[768] = 162, arr[161] = 506
Before permuting arr[235] = 236,  arr[93] = 94, arr[555] = 556
After permuting arr[235] = 94,  arr[93] = 556, arr[555] = 236
Before permuting arr[601] = 602,  arr[251] = 252, arr[144] = 145
After permuting arr[601] = 252,  arr[251] = 145, arr[144] = 602
Before permuting arr[410] = 411,  arr[651] = 652, arr[291] = 292
After permuting arr[410] = 652,  arr[651] = 292, arr[291] = 411
Before permuting arr[588] = 589,  arr[435] = 436, arr[447] = 448
After permuting arr[588] = 436,  arr[435] = 448, arr[447] = 589
Before permuting arr[448] = 449,  arr[275] = 276, arr[681] = 682
After permuting arr[448] = 276,  arr[275] = 682, arr[681] = 449
Before permuting arr[956] = 957,  arr[200] = 201, arr[329] = 330
After permuting arr[956] = 201,  arr[200] = 330, arr[329] = 957
Before permuting arr[651] = 292,  arr[842] = 843, arr[834] = 835
After permuting arr[651] = 843,  arr[842] = 835, arr[834] = 292
Before permuting arr[949] = 950,  arr[560] = 561, arr[901] = 902
After permuting arr[949] = 561,  arr[560] = 902, arr[901] = 950
Before permuting arr[164] = 165,  arr[664] = 665, arr[43] = 44
After permuting arr[164] = 665,  arr[664] = 44, arr[43] = 165
Before permuting arr[572] = 573,  arr[955] = 956, arr[811] = 812
After permuting arr[572] = 956,  arr[955] = 812, arr[811] = 573
Before permuting arr[733] = 734,  arr[542] = 543, arr[256] = 257
After permuting arr[733] = 543,  arr[542] = 257, arr[256] = 734
Before permuting arr[640] = 641,  arr[496] = 497, arr[859] = 860
After permuting arr[640] = 497,  arr[496] = 860, arr[859] = 641
Before permuting arr[136] = 137,  arr[258] = 259, arr[510] = 511
After permuting arr[136] = 259,  arr[258] = 511, arr[510] = 137
Before permuting arr[428] = 429,  arr[846] = 847, arr[297] = 298
After permuting arr[428] = 847,  arr[846] = 298, arr[297] = 429
Before permuting arr[875] = 876,  arr[294] = 295, arr[924] = 925
After permuting arr[875] = 295,  arr[294] = 925, arr[924] = 876
Before permuting arr[556] = 557,  arr[250] = 251, arr[125] = 126
After permuting arr[556] = 251,  arr[250] = 126, arr[125] = 557
Total number of comparisons among elements performed = 7048
[1, 21, 41, 61, 81, 101, 121, 141, 161, 181, 201, 221, 241, 261, 281, 301, 321, 341, 361, 381, 401, 421, 441, 461, 481, 501, 521, 541, 561, 581, 601, 621, 641, 661, 681, 701, 721, 741, 761, 781, 801, 821, 841, 861, 881, 901, 921, 941, 961, 981, 1001, 1021, 1041, 1061, 1081, 1101, 1121, 1141, 1161, 1181, 1201, 1221, 1241, 1261, 1281, 1301, 1321, 1341, 1361, 1381, 1401, 1421, 1441, 1461, 1481, 1501, 1521, 1541, 1561, 1581, 1601, 1621, 1641, 1661, 1681, 1701, 1721, 1741, 1761, 1781, 1801, 1821, 1841, 1861, 1881, 1901, 1921, 1941, 1961, 1981, ]


*****End of Testcase8 Execution*****


*****Begin of Testcase9 Execution*****

Total number of comparisons among elements performed = 68987
[1, 66, 108, 159, 212, 268, 319, 396, 471, 541, 637, 707, 762, 816, 872, 939, 982, 1019, 1070, 1147, 1206, 1288, 1365, 1440, 1497, 1558, 1605, 1682, 1746, 1786, 1876, 1929, 1996, 2060, 2111, 2190, 2254, 2315, 2381, 2438, 2493, 2582, 2638, 2695, 2772, 2830, 2892, 2936, 2980, 3037, 3088, 3163, 3203, 3290, 3347, 3426, 3491, 3538, 3624, 3694, 3766, 3847, 3907, 3969, 4037, 4091, 4146, 4215, 4285, 4340, 4412, 4462, 4522, 4581, 4650, 4718, 4771, 4828, 4882, 4949, 5012, 5058, 5143, 5205, 5260, 5327, 5388, 5432, 5508, 5559, 5626, 5690, 5749, 5804, 5892, 5969, 6009, 6066, 6135, 6196, 6242, 6300, 6382, 6428, 6466, 6538, 6596, 6649, 6700, 6768, 6837, 6894, 6978, 7041, 7111, 7172, 7224, 7293, 7344, 7405, 7458, 7510, 7582, 7638, 7677, 7746, 7809, 7882, 7964, 8019, 8078, 8155, 8215, 8253, 8319, 8392, 8440, 8487, 8560, 8630, 8704, 8777, 8830, 8874, 8936, 8999, 9088, 9153, 9205, 9269, 9325, 9361, 9428, 9474, 9533, 9617, 9703, 9802, 9885, 9962, ]


*****End of Testcase9 Execution*****


*****Begin of Testcase10 Execution*****

Total number of comparisons among elements performed = 121202
[1, 32, 72, 115, 153, 183, 228, 257, 290, 326, 395, 446, 491, 526, 562, 601, 646, 685, 731, 755, 792, 819, 852, 885, 922, 959, 987, 1017, 1064, 1099, 1133, 1159, 1190, 1224, 1251, 1297, 1342, 1391, 1434, 1462, 1491, 1544, 1598, 1643, 1673, 1710, 1743, 1790, 1820, 1863, 1902, 1957, 1986, 2028, 2045, 2074, 2122, 2173, 2221, 2258, 2293, 2325, 2367, 2402, 2438, 2472, 2503, 2555, 2605, 2635, 2692, 2735, 2790, 2834, 2890, 2935, 2994, 3036, 3082, 3124, 3170, 3202, 3238, 3281, 3323, 3362, 3405, 3439, 3472, 3521, 3561, 3598, 3634, 3683, 3731, 3767, 3794, 3829, 3881, 3916, 3950, 3993, 4026, 4061, 4095, 4135, 4174, 4205, 4251, 4293, 4325, 4374, 4424, 4466, 4505, 4542, 4587, 4622, 4669, 4702, 4749, 4778, 4810, 4828, 4871, 4919, 4959, 5008, 5047, 5081, 5111, 5140, 5179, 5207, 5233, 5269, 5311, 5339, 5386, 5417, 5478, 5515, 5548, 5604, 5634, 5669, 5703, 5737, 5776, 5812, 5861, 5896, 5939, 5985, 6027, 6050, 6076, 6116, 6146, 6175, 6216, 6242, 6269, 6310, 6348, 6398, 6435, 6467, 6493, 6549, 6592, 6630, 6668, 6688, 6726, 6763, 6794, 6824, 6851, 6887, 6917, 6952, 6994, 7026, 7067, 7102, 7141, 7183, 7213, 7246, 7281, 7338, 7390, 7437, 7472, 7504, 7536, 7571, 7602, 7656, 7694, 7728, 7757, 7797, 7857, 7894, 7948, 7987, 8017, 8046, 8114, 8144, 8174, 8209, 8259, 8310, 8354, 8398, 8427, 8464, 8506, 8539, 8584, 8628, 8674, 8714, 8752, 8785, 8828, 8872, 8908, 8944, 8977, 9015, 9044, 9086, 9126, 9163, 9195, 9226, 9271, 9327, 9375, 9405, 9447, 9486, 9524, 9574, 9611, 9656, 9710, 9760, 9791, 9826, 9846, 9884, 9916, 9949, 9979, ]


*****End of Testcase10 Execution*****
