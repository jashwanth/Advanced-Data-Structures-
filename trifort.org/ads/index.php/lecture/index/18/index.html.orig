<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>cse674 - advanced data strucures</title>
    <link href="/css/styles.css" rel="stylesheet" type="text/css" />
  <head>
  <body>
    <div class="page_block1">
      <div class="page_block2">

        <div class="section">
          <h1>18: random and probabilistic data structures</h1>
          Linear Congruential Generator | Random Data Structure Overview | Treap <br />
          Fisher-Yates Shuffle | Random Assignment | Bloom Filter | Random Optimization<br />
          <br />
        </div>

        <div class="section">
        <h2>Linear Congruential Generator</h2>
        When you use rand() in C/C++, they aren't really random numbers, it is a string of numbers that is based on a formula in the standard library.<br />
        <br />
        A linear congruential generator is a popular random number generator:<br />
        <br />
        X(n+1) = (a * X(n) + c) mod m<br />
        where:<br />
        <ul>
          <li>a: 0 &lt; a &lt; m</li>
          <li>c: 0 &lt;= c &lt; m</li>
          <li>X(0): 0 &lt m</li>
        </ul>
        Requirements of c, a, and m:<br />
        <ul>
          <li>c and m should be relatively prime (the only positive integer that evenly divides them both is one)
            <ul><li>"For example, 14 and 15 are coprime, being commonly divisible by only 1, but 14 and 21 are not, because they are both divisible by 7." [2]</li></ul>
          </li>
          <li>a - 1 must be divisible by all prime factors of m</li>
          <li>a - 1 must be a multiple of 4 if m is a multiple of 4</li>
        </ul>
        glibc (used by gcc) uses these parameters:<br />
        <ul>
          <li>m = 2^32</li>
          <li>a = 1103515245</li>
          <li>c = 12345</li>
        </ul>
        Visual C/C++ and Apple CarbonLib use a linear congruential generator too.<br />
        <br />
        This means I should be able to perfectly predict the random numbers coming from a gcc rand function if I know the seed or the previous random number output.<br />
        <br />
        In fact, in the "Berkley Open Infrastructure for Network Computing" (BOINC), they save the state of the random number generator by saving off the last random number generated. Then to restore, that number is put in as the seed.<br />
        <br />
        Demonstration of rand predictibility:
        <div class="code_block">
        <div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_comment">// randReplay.cpp - download <a href="/ads/index.php/dlcode/index/randReplay.cpp">here</a></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">cstdlib&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">iostream&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">printRandomNumbers(</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"five&nbsp;random&nbsp;numbers&nbsp;between&nbsp;0&nbsp;and&nbsp;10:"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl;</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">rand(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">%&nbsp;</div><div class="code_nothing">10&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"&nbsp;"</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">12:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl;</div><div class="code_nothing"></div><br /><div class="code_grey">13:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">14:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">15:&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">main(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">argc,&nbsp;</div><div class="code_green">char</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">*&nbsp;</div><div class="code_nothing">argv[</div><div class="code_nothing">]</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">16:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">17:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">seed&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">20;</div><div class="code_nothing"></div><br /><div class="code_grey">18:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">19:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">srand(</div><div class="code_nothing">seed)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">20:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">printRandomNumbers(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">21:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">22:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">srand(</div><div class="code_nothing">seed)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">23:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">printRandomNumbers(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">24:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">25:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//prints:</div><br /><div class="code_grey">26:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//</div><br /><div class="code_grey">27:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;five&nbsp;random&nbsp;numbers&nbsp;between&nbsp;0&nbsp;and&nbsp;10:</div><br /><div class="code_grey">28:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;1&nbsp;8&nbsp;7&nbsp;9&nbsp;6&nbsp;</div><br /><div class="code_grey">29:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//</div><br /><div class="code_grey">30:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;five&nbsp;random&nbsp;numbers&nbsp;between&nbsp;0&nbsp;and&nbsp;10:</div><br /><div class="code_grey">31:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;1&nbsp;8&nbsp;7&nbsp;9&nbsp;6&nbsp;</div><br /><div class="code_grey">32:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">33:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing"></div><br /><div class="code_grey">34:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br />        </div>
        <ul>
          <li>If better random numbers are needed, a Mersenne twister algorithm has a much larger period</li>
        </ul>
        <h3>Environment based random numbers</h3>
        Linux and MAC OS X contain the special file: /dev/random. It collects environmental noise from device drivers and "other sources" and uses these as seeds to produce random bytes [4]. This can serve random numbers that are good enough for cryptographic functions. If /dev/random runs out of bytes and there is no new noise, reads from /dev/random block until there is new noise (on linux).
        <h3>Hardware Random Number Generators</h3>
        Hardware Random Number Generators use things like thermal noise, the photoelectric effect or other quantum phenomena [5] to produce random numbers.<br />
        <br />
        </div>
        <div class="section">
          <h2>Random Data Structure Overview</h2>
          <ul>
            <li><b>List: </b> Skip List</li>
            <li><b>Hashtable: </b> Perfect Hashing</li>
            <li><b>Tree: </b> Treap</li>
          </ul>
        </div>
        <div class="section">
        <h2>Treap</h2>
        Treaps are a randomized binary tree. The are a combiniation of a max heap and a binary tree.<br />
        <br />
        Insertion:
        <ul>
          <li>Start:
            <img src="/ads/img/pict/Treap_0.bmp" alt="Treap" />
          </li> 
          <li>Insert value with random priority:
            <img src="/ads/img/pict/Treap_1.bmp" alt="Treap" />
          </li> 
          <li>Do rotations until there is a max heap again:
            <img src="/ads/img/pict/Treap_2.bmp" alt="Treap" />
          </li> 
        </ul>
        Time complexity:
        <ul>
          <li>O(lgn) amortized</li>
        </ul>
        </div>
        <div class="section">
        <h2>Fisher-Yates Shuffle [7]</h2>
        Fisher-Yates Shuffle can create a random permutation of a finite set:<br />
        <div class="algorithm">
        <div class="code_grey">1:&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">fisherYatesShuffle(</div><div class="code_nothing">vector&nbsp;</div><div class="code_nothing">vec)</div><div class="code_nothing"></div><br /><div class="code_grey">2:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">vec.size(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">to&nbsp;</div><div class="code_nothing">1</div><br /><div class="code_grey">3:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">j&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">random&nbsp;</div><div class="code_nothing">number&nbsp;</div><div class="code_nothing">between&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">i</div><br /><div class="code_grey">4:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">exchange&nbsp;</div><div class="code_nothing">vec[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">vec[</div><div class="code_nothing">j]</div><div class="code_nothing"></div><br />        </div>
        <table class="nice_table">
          <tr>
            <td bgcolor="#e5e5e5" width="100px">start: </td>
            <td width="200px">[0 1 2 3 4 5]</td>
          </tr>
          <tr>
            <td bgcolor="#e5e5e5" width="100px">i = 5, j = 2</td>
            <td width="200px">[0 1 5 3 4 2]</td>
          </tr>
          <tr>
            <td bgcolor="#e5e5e5" width="100px">i = 4, j = 0</td>
            <td width="200px">[4 1 5 3 0 2]</td>
          </tr>
          <tr>
            <td bgcolor="#e5e5e5" width="100px">i = 3, j = 2</td>
            <td width="200px">[4 1 3 5 0 2]</td>
          </tr>
          <tr>
            <td bgcolor="#e5e5e5" width="100px">i = 2, j = 1</td>
            <td width="200px">[4 3 1 5 0 2]</td>
          </tr>
          <tr>
            <td bgcolor="#e5e5e5" width="100px">i = 1, j = 0</td>
            <td width="200px">[3 4 1 5 0 2]</td>
          </tr>
        </table>
        </div>
        <div class="section">
        <h2>Randomly Assign to Bins</h2>
        You want each bin to have an equal number of random items:
        <div class="code_block">
        <div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_comment">// randProjectAssignment.cpp - download <a href="/ads/index.php/dlcode/index/randProjectAssignment.cpp">here</a></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">cstdlib&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">iostream&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">vector&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">string&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">sstream&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">ctime&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_red">algorithm</div><div class="code_nothing">&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">string&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">assign(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">num_people,&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">string&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">names)</div><div class="code_nothing"></div><br /><div class="code_grey">12:&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">13:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">people;</div><div class="code_nothing"></div><br /><div class="code_grey">14:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">names.size(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">15:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">people.push_back(</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">%&nbsp;</div><div class="code_nothing">num_people)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">16:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">17:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">18:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">random_shuffle(</div><div class="code_nothing">people.begin(</div><div class="code_nothing">)</div><div class="code_nothing">,&nbsp;</div><div class="code_nothing">people.end(</div><div class="code_nothing">)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">19:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">20:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">string&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">ret;</div><div class="code_nothing"></div><br /><div class="code_grey">21:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">ret.resize(</div><div class="code_nothing">num_people)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">22:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">23:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">people.size(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">24:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">id&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">people[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">25:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">ret[</div><div class="code_nothing">id]</div><div class="code_nothing">.push_back(</div><div class="code_nothing">names[</div><div class="code_nothing">i]</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">26:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">27:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">28:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">ret;</div><div class="code_nothing"></div><br /><div class="code_grey">29:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">30:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">31:&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">string&nbsp;</div><div class="code_nothing">toString(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i)</div><div class="code_nothing"></div><br /><div class="code_grey">32:&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">33:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">ostringstream&nbsp;</div><div class="code_nothing">oss;</div><div class="code_nothing"></div><br /><div class="code_grey">34:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">oss&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i;</div><div class="code_nothing"></div><br /><div class="code_grey">35:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">oss.str(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">36:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">37:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">38:&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">main(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">argc,&nbsp;</div><div class="code_green">char</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">*&nbsp;</div><div class="code_nothing">argv[</div><div class="code_nothing">]</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">39:&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">40:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">41:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">string&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">names;</div><div class="code_nothing"></div><br /><div class="code_grey">42:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">10;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">43:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">names.push_back(</div><div class="code_nothing">toString(</div><div class="code_nothing">i)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">44:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">45:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">46:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">string&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">groups&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">assign(</div><div class="code_nothing">3,&nbsp;</div><div class="code_nothing">names)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">47:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">size_t</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">groups.size(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">48:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"group:&nbsp;"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl;</div><div class="code_nothing"></div><br /><div class="code_grey">49:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">string&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">groups[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">50:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">size_t</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">j&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">j&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr.size(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++j)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">51:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"&nbsp;&nbsp;name:&nbsp;"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr[</div><div class="code_nothing">j]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl;</div><div class="code_nothing"></div><br /><div class="code_grey">52:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">53:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">54:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">55:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//group:&nbsp;0</div><br /><div class="code_grey">56:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;name:&nbsp;1</div><br /><div class="code_grey">57:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;name:&nbsp;4</div><br /><div class="code_grey">58:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;name:&nbsp;8</div><br /><div class="code_grey">59:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;name:&nbsp;9</div><br /><div class="code_grey">60:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//group:&nbsp;1</div><br /><div class="code_grey">61:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;name:&nbsp;0</div><br /><div class="code_grey">62:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;name:&nbsp;2</div><br /><div class="code_grey">63:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;name:&nbsp;7</div><br /><div class="code_grey">64:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//group:&nbsp;2</div><br /><div class="code_grey">65:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;name:&nbsp;3</div><br /><div class="code_grey">66:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;name:&nbsp;5</div><br /><div class="code_grey">67:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;name:&nbsp;6</div><br /><div class="code_grey">68:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">69:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing"></div><br /><div class="code_grey">70:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br />        </div>
        </div>
        <div class="section">
          <h2>Bloom Filter [8]</h2>
          A bloom filter tells whether an element is in a set. It says either:
          <ul>
            <li>The item may be in the set</li>
            <li>The item is not in the set</li>
          </ul>
          It uses k hash functions and an array of binary bits. 10 bits per element
          are needed to ensure 1% false positive probability [9].<br />
          <br />
          To insert, feed the item to the k hash functions to get k bits to set in
          the table. Then set these bits. Removal is possible in a counting filter that
          contains a count rather than a bit.<br />
          <br />
          The hash function could be: 
          <ul>
            <li>hash_k(item) = (k + item) % table_size</li>
            <li>Seed a random number generator with a hash result. Take the k successive items from rand()</li>
          </ul>
          To search, all bits must be one after hashing.<br />
          <br />
          Notable uses:
          <ul>
            <li><b>Apache Casandra:</b> reduce disk lookups for non-existant rows by containing all keys in a bloom filter [11]</li>
            <li><b>Google Chrome:</b> identify malicious URLs. first check is against bloom filter then full check is against full database.</li>
          </ul>
        </div>
        <div class="section">
        <h2>Evolutionary Programming</h2>
        In evolutionary programming, a model is fixed, but the constants are randomly mutated until a solution is found<br />
        <div class="algorithm">
        <div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">evolve</div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">seeds&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">generateRandomSeeds(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">calculate&nbsp;</div><div class="code_nothing">cost;</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">while</div><div class="code_nothing">(</div><div class="code_nothing">convergence&nbsp;</div><div class="code_nothing">not&nbsp;</div><div class="code_nothing">met&nbsp;</div><div class="code_nothing">of&nbsp;</div><div class="code_nothing">seeds)</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">take&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">best&nbsp;</div><div class="code_nothing">n&nbsp;</div><div class="code_nothing">seeds&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">add&nbsp;</div><div class="code_nothing">them&nbsp;</div><div class="code_nothing">to&nbsp;</div><div class="code_nothing">next_seeds;</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">mutate&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">best&nbsp;</div><div class="code_nothing">n&nbsp;</div><div class="code_nothing">seeds&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">add&nbsp;</div><div class="code_nothing">them&nbsp;</div><div class="code_nothing">to&nbsp;</div><div class="code_nothing">next_seeds;</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">generate&nbsp;</div><div class="code_nothing">n&nbsp;</div><div class="code_nothing">random&nbsp;</div><div class="code_red">new</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">seeds&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">add&nbsp;</div><div class="code_nothing">them&nbsp;</div><div class="code_nothing">to&nbsp;</div><div class="code_nothing">next_seeds;</div><div class="code_nothing"></div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">seeds&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">next_seeds;</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">calculate&nbsp;</div><div class="code_nothing">cost&nbsp;</div><div class="code_nothing">of&nbsp;</div><div class="code_nothing">seeds;</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">output&nbsp;</div><div class="code_nothing">constants&nbsp;</div><div class="code_red">for</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">best&nbsp;</div><div class="code_nothing">seed;</div><div class="code_nothing"></div><br />        </div>
        Line Parameter Estimation Example:
        <div class="code_block">
        <div class="code_grey">1:&nbsp;&nbsp;&nbsp;</div><div class="code_comment">// evolutionaryLine.cpp - download <a href="/ads/index.php/dlcode/index/evolutionaryLine.cpp">here</a></div><br /><div class="code_grey">2:&nbsp;&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">vector&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">iostream&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_red">algorithm</div><div class="code_nothing">&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">cstdio&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">cstdlib&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">8:&nbsp;&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">ctime&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">cmath&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;&nbsp;</div><div class="code_red">struct</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">12:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m;</div><div class="code_nothing"></div><br /><div class="code_grey">13:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">b;</div><div class="code_nothing"></div><br /><div class="code_grey">14:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">cost;</div><div class="code_nothing"></div><br /><div class="code_grey">15:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">16:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">bool</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">operator&lt;</div><div class="code_nothing">(</div><div class="code_green">const</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">rhs)</div><div class="code_nothing">&nbsp;</div><div class="code_green">const</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">17:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">18:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">19:&nbsp;&nbsp;</div><div class="code_green">bool</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed:</div><div class="code_nothing">:</div><div class="code_nothing">operator&lt;</div><div class="code_nothing">(</div><div class="code_green">const</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">rhs)</div><div class="code_nothing">&nbsp;</div><div class="code_green">const</div><div class="code_nothing"></div><br /><div class="code_grey">20:&nbsp;&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">21:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">cost&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">rhs.cost;</div><div class="code_nothing"></div><br /><div class="code_grey">22:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">23:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">24:&nbsp;&nbsp;</div><div class="code_red">struct</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">25:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x;</div><div class="code_nothing"></div><br /><div class="code_grey">26:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y;</div><div class="code_nothing"></div><br /><div class="code_grey">27:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Point(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">28:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">29:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">30:&nbsp;&nbsp;</div><div class="code_nothing">Point:</div><div class="code_nothing">:</div><div class="code_nothing">Point(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">31:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">this-&gt;</div><div class="code_nothing">x&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x;</div><div class="code_nothing"></div><br /><div class="code_grey">32:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">this-&gt;</div><div class="code_nothing">y&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y;</div><div class="code_nothing"></div><br /><div class="code_grey">33:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">34:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">35:&nbsp;&nbsp;</div><div class="code_red">class</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">EvolutionaryLine&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">36:&nbsp;&nbsp;</div><div class="code_red">public</div><div class="code_nothing">:</div><div class="code_nothing"></div><br /><div class="code_grey">37:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">solve(</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">Point&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">points)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">38:&nbsp;&nbsp;</div><div class="code_red">private</div><div class="code_nothing">:</div><div class="code_nothing"></div><br /><div class="code_grey">39:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">fixSeeds(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">40:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">initSeeds(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">41:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">calculateScore(</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">seed)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">42:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">mutate(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">43:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">calculateScores(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">44:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">Point&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Points;</div><div class="code_nothing"></div><br /><div class="code_grey">45:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">Seed&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds;</div><div class="code_nothing"></div><br /><div class="code_grey">46:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_ConvergeCount;</div><div class="code_nothing"></div><br /><div class="code_grey">47:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">m_BestSeed;</div><div class="code_nothing"></div><br /><div class="code_grey">48:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">49:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">50:&nbsp;&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">EvolutionaryLine:</div><div class="code_nothing">:</div><div class="code_nothing">calculateScore(</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">seed)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">51:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">ret&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing"></div><br /><div class="code_grey">52:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">size_t</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Points.size(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">53:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">curr&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Points[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">54:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">seed.m&nbsp;</div><div class="code_nothing">*&nbsp;</div><div class="code_nothing">curr.x)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">seed.b;</div><div class="code_nothing"></div><br /><div class="code_grey">55:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">score&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr.y&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">y;</div><div class="code_nothing"></div><br /><div class="code_grey">56:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">score&nbsp;</div><div class="code_nothing">*=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">score;</div><div class="code_nothing"></div><br /><div class="code_grey">57:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">ret&nbsp;</div><div class="code_nothing">+=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">score;</div><div class="code_nothing"></div><br /><div class="code_grey">58:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">59:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">ret;</div><div class="code_nothing"></div><br /><div class="code_grey">60:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">61:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">62:&nbsp;&nbsp;</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">EvolutionaryLine:</div><div class="code_nothing">:</div><div class="code_nothing">solve(</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">Point&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">points)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">63:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Points&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">points;</div><div class="code_nothing"></div><br /><div class="code_grey">64:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">initSeeds(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">65:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">while</div><div class="code_nothing">(</div><div class="code_nothing">m_BestSeed.cost&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">66:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"cost:&nbsp;"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_BestSeed.cost&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl;</div><div class="code_nothing"></div><br /><div class="code_grey">67:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">mutate(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">68:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">calculateScores(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">69:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">70:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_BestSeed;</div><div class="code_nothing"></div><br /><div class="code_grey">71:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">72:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">73:&nbsp;&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">EvolutionaryLine:</div><div class="code_nothing">:</div><div class="code_nothing">fixSeeds(</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">74:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">size_t</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds.size(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">75:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">curr&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">76:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">while</div><div class="code_nothing">(</div><div class="code_nothing">curr.m&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">77:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr.m&nbsp;</div><div class="code_nothing">+=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">rand(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">%&nbsp;</div><div class="code_nothing">4)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">2;</div><div class="code_nothing"></div><br /><div class="code_grey">78:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">79:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr;</div><div class="code_nothing"></div><br /><div class="code_grey">80:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">81:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">82:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">83:&nbsp;&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">EvolutionaryLine:</div><div class="code_nothing">:</div><div class="code_nothing">mutate(</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">84:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">Seed&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">new_seeds;</div><div class="code_nothing"></div><br /><div class="code_grey">85:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">new_seeds.push_back(</div><div class="code_nothing">m_BestSeed)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">86:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">87:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">10;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">88:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">curr&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">89:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr.m&nbsp;</div><div class="code_nothing">+=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">rand(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">%&nbsp;</div><div class="code_nothing">4)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">2;</div><div class="code_nothing"></div><br /><div class="code_grey">90:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr.b&nbsp;</div><div class="code_nothing">+=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">rand(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">%&nbsp;</div><div class="code_nothing">4)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">2;</div><div class="code_nothing"></div><br /><div class="code_grey">91:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">new_seeds.push_back(</div><div class="code_nothing">curr)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">92:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">93:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">94:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">10;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">95:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">seed;</div><div class="code_nothing"></div><br /><div class="code_grey">96:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">seed.m&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">rand(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">%&nbsp;</div><div class="code_nothing">10)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">5;</div><div class="code_nothing"></div><br /><div class="code_grey">97:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">seed.b&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">rand(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">%&nbsp;</div><div class="code_nothing">10)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">5;</div><div class="code_nothing"></div><br /><div class="code_grey">98:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">new_seeds.push_back(</div><div class="code_nothing">seed)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">99:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">100:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">101:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">new_seeds;</div><div class="code_nothing"></div><br /><div class="code_grey">102:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">fixSeeds(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">103:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">104:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">105:&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">EvolutionaryLine:</div><div class="code_nothing">:</div><div class="code_nothing">calculateScores(</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">106:&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">107:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">size_t</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds.size(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">108:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">curr&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">109:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr.cost&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">calculateScore(</div><div class="code_nothing">curr)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">110:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr;</div><div class="code_nothing"></div><br /><div class="code_grey">111:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">112:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">113:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">sort(</div><div class="code_nothing">m_Seeds.begin(</div><div class="code_nothing">)</div><div class="code_nothing">,&nbsp;</div><div class="code_nothing">m_Seeds.end(</div><div class="code_nothing">)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">114:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">new_best&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds[</div><div class="code_nothing">0]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">115:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">new_best.m&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_BestSeed.m&nbsp;</div><div class="code_nothing">&</div><div class="code_nothing">&</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">new_best.b&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_BestSeed.b)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">116:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_ConvergeCount++;</div><div class="code_nothing"></div><br /><div class="code_grey">117:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">&nbsp;</div><div class="code_red">else</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">118:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_ConvergeCount&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing"></div><br /><div class="code_grey">119:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_BestSeed&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">new_best;</div><div class="code_nothing"></div><br /><div class="code_grey">120:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">121:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">122:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">123:&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">EvolutionaryLine:</div><div class="code_nothing">:</div><div class="code_nothing">initSeeds(</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">124:&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">125:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">srand(</div><div class="code_nothing">time(</div><div class="code_nothing">NULL)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">126:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">10;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">127:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">seed;</div><div class="code_nothing"></div><br /><div class="code_grey">128:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">seed.m&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">rand(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">%&nbsp;</div><div class="code_nothing">10)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">5;</div><div class="code_nothing"></div><br /><div class="code_grey">129:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">seed.b&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">rand(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">%&nbsp;</div><div class="code_nothing">10)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">5;</div><div class="code_nothing"></div><br /><div class="code_grey">130:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds.push_back(</div><div class="code_nothing">seed)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">131:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">132:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">fixSeeds(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">133:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">size_t</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds.size(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">134:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">curr&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">135:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr.cost&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">calculateScore(</div><div class="code_nothing">curr)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">136:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr;</div><div class="code_nothing"></div><br /><div class="code_grey">137:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">138:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">sort(</div><div class="code_nothing">m_Seeds.begin(</div><div class="code_nothing">)</div><div class="code_nothing">,&nbsp;</div><div class="code_nothing">m_Seeds.end(</div><div class="code_nothing">)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">139:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_BestSeed&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_Seeds[</div><div class="code_nothing">0]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">140:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_ConvergeCount&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing"></div><br /><div class="code_grey">141:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">142:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">143:&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">main(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">argc,&nbsp;</div><div class="code_green">char</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">*&nbsp;</div><div class="code_nothing">argv[</div><div class="code_nothing">]</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">144:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">145:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">Point&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">points;</div><div class="code_nothing"></div><br /><div class="code_grey">146:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">points.push_back(</div><div class="code_nothing">Point(</div><div class="code_nothing">1,&nbsp;</div><div class="code_nothing">0)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">147:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">points.push_back(</div><div class="code_nothing">Point(</div><div class="code_nothing">2,&nbsp;</div><div class="code_nothing">1)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">148:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">points.push_back(</div><div class="code_nothing">Point(</div><div class="code_nothing">3,&nbsp;</div><div class="code_nothing">2)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">149:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">points.push_back(</div><div class="code_nothing">Point(</div><div class="code_nothing">4,&nbsp;</div><div class="code_nothing">3)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">150:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">points.push_back(</div><div class="code_nothing">Point(</div><div class="code_nothing">5,&nbsp;</div><div class="code_nothing">4)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">151:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">points.push_back(</div><div class="code_nothing">Point(</div><div class="code_nothing">6,&nbsp;</div><div class="code_nothing">5)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">152:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">points.push_back(</div><div class="code_nothing">Point(</div><div class="code_nothing">8,&nbsp;</div><div class="code_nothing">6)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">153:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">154:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">EvolutionaryLine&nbsp;</div><div class="code_nothing">evoline;</div><div class="code_nothing"></div><br /><div class="code_grey">155:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Seed&nbsp;</div><div class="code_nothing">seed&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">evoline.solve(</div><div class="code_nothing">points)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">156:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">157:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"seed.m:&nbsp;"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">seed.m&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"&nbsp;seed.b:&nbsp;"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">seed.b&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl;</div><div class="code_nothing"></div><br /><div class="code_grey">158:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//prints:</div><br /><div class="code_grey">159:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;cost:&nbsp;186</div><br /><div class="code_grey">160:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;cost:&nbsp;33</div><br /><div class="code_grey">161:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_comment">//&nbsp;&nbsp;seed.m:&nbsp;1&nbsp;seed.b:&nbsp;-1</div><br /><div class="code_grey">162:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">163:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing"></div><br /><div class="code_grey">164:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br />        </div>
        </div>
        <div class="section">
        <h2>References</h2>
        <ol>
          <li>http://en.wikipedia.org/wiki/Linear_congruential_generator</li>
          <li>http://en.wikipedia.org/wiki/Relatively_prime</li>
          <li>http://en.wikipedia.org/wiki/Treap</li>
          <li>http://en.wikipedia.org/wiki//dev/random</li>
          <li>http://en.wikipedia.org/wiki/Hardware_random_number_generator</li>
          <li>http://en.wikipedia.org/wiki/Randomized_algorithm</li>
          <li>http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle</li>
          <li>http://en.wikipedia.org/wiki/Bloom_filter</li>
          <li>Bonomi, Flavio; Mitzenmacher, Michael; Panigrahy, Rina; Singh, Sushil; Varghese, George (2006), "An Improved Construction for Counting Bloom Filters", Algorithms – ESA 2006, 14th Annual European Symposium, Lecture Notes in Computer Science 4168, pp. 684–695</li>
          <li>http://wiki.apache.org/cassandra/ArchitectureSSTable</li>
        </ol>
        </div>
      </div>
    </div>
  </body>
</html>
