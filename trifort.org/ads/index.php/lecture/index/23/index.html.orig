<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>cse674 - advanced data strucures</title>
  <link href="/css/styles.css" rel="stylesheet" type="text/css"></link>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
  <link rel="shortcut icon" href="/cse382/img/favicon2.ico" />
  </head>
  <body>
    <div class="page_block1">
      <div class="page_block2">
        <div class="section">
          <h1>23: algorithm classes and BDDs</h1>
          Dynamic Programming #1 | Dynamic Programming #2 | Memoization | Greedy Algorithms<br />
        </div>
<div class="section">
<h2>Dynamic Programming Intro: Assembly-line scheduling [1]</h2>
Assembly-line scheduling problem:
<ul>
  <li>There are two assembly lines, normally a product goes through either one</li>
  <li>Each line has n stations. Station_i on both lines has the same function</li>
  <li>Station_i in different lines were created at different times and have different performance</li>
  <li>Changing lines has a time cost associated with it</li>
</ul>
With rush orders, what is the fastest way through the factory using both stations?<br />
<br />
<img src="/ads/img/pict/AssemblyLine_0.bmp" alt="AssemblyLine" /><br />
<br />
<b>The structure of the fastest way through the factory</b><br />
<br />
We can use brute-force to calculate the fastest route using combinatorics. There are 2^n ways to choose stations so enumerating all possible ways and then finding the min time takes O(2^n) time.<br />
<br />
But we can use dynamic programming. The optimal way to get to Station[n] is based on a subproblem: what is the optimal way to get to Station[n-1] plus the choice of switching lines or not.
<ul>
  <li>f_total = min(f1[n], f2[n])</li>
  <li>f1[n] = min(f1[n-1] + s1[n], f2[n-1] + c2[n-1] + s1[n])</li>
  <li>f2[n] = min(f2[n-1] + s2[n], f1[n-1] + c1[n-1] + s2[n])</li>
</ul>
s1/s2 = time for a station to run<br />
c1/c2 = cost of changing lines<br />
<br />
<div class="algorithm">
<div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">assemblyLineFastestWay(</div><div class="code_nothing">s1,&nbsp;</div><div class="code_nothing">s2,&nbsp;</div><div class="code_nothing">c1,&nbsp;</div><div class="code_nothing">c2)</div><div class="code_nothing"></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">f1[</div><div class="code_nothing">0]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">s1[</div><div class="code_nothing">0]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">f2[</div><div class="code_nothing">0]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">s2[</div><div class="code_nothing">0]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">to&nbsp;</div><div class="code_nothing">n)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">f1[</div><div class="code_nothing">i-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">s1[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">f2[</div><div class="code_nothing">i-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">c2[</div><div class="code_nothing">i-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">s1[</div><div class="code_nothing">i]</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">f1[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">f1[</div><div class="code_nothing">i-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">s1[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">path1[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing"></div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">&nbsp;</div><div class="code_red">else</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">f1[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">f2[</div><div class="code_nothing">i-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">c2[</div><div class="code_nothing">i-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">s1[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">path1[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">2;</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">12:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">f2[</div><div class="code_nothing">i-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">s2[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">f1[</div><div class="code_nothing">i-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">c1[</div><div class="code_nothing">i-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">s2[</div><div class="code_nothing">i]</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">13:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">f2[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">f2[</div><div class="code_nothing">i-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">s2[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">14:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">path2[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">2;</div><div class="code_nothing"></div><br /><div class="code_grey">15:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">&nbsp;</div><div class="code_red">else</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">16:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">f2[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">f1[</div><div class="code_nothing">i-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">c1[</div><div class="code_nothing">i-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">s2[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">17:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">path2[</div><div class="code_nothing">i]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing"></div><br /><div class="code_grey">18:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">19:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">20:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">f1[</div><div class="code_nothing">n-1]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">f2[</div><div class="code_nothing">n-1]</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">21:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">min_time&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">f1[</div><div class="code_nothing">n-1]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">22:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">start_path&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">path1;</div><div class="code_nothing"></div><br /><div class="code_grey">23:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">&nbsp;</div><div class="code_red">else</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">24:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">min_time&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">f2[</div><div class="code_nothing">n-1]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">25:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">start_path&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">path2;</div><div class="code_nothing"></div><br /><div class="code_grey">26:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">27:&nbsp;</div><div class="code_nothing"></div><br /></div>
The inner part of the for loop is constant time and the loop ranges over n, so the time complexity to solve with dynamic programming is O(n).<br />
<br />
Printing out the fastest path:
<div class="algorithm">
<div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">assemblyLinePrintFastest(</div><div class="code_nothing">start_path,&nbsp;</div><div class="code_nothing">path1,&nbsp;</div><div class="code_nothing">path2)</div><div class="code_nothing"></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr_line&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">start_path;</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">n&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">to&nbsp;</div><div class="code_nothing">0)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">line&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">curr_line[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">print&nbsp;</div><div class="code_nothing">line;</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">line&nbsp;</div><div class="code_nothing">==&nbsp;</div><div class="code_nothing">1)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr_line&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">path1;</div><div class="code_nothing"></div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">&nbsp;</div><div class="code_red">else</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr_line&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">path2;</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /></div>
<br />
Dijkstra's algorithm for shortest paths is a similar dynamic programming example. But here note that problem specific structure can be added as long as you have optimal subproblem solutions.
</div>
<div class="section">
<h2>Bottom's-Up Dynamic Programming: Matrix-chain Multiplication [1]</h2>
Matrix-chain Multiplication can be done in any order:<br />
(A1(A2(A3(A4))))<br />
(A1((A2A3)A4))<br />
((A1A2)(A3A4))<br />
((A1(A2A3))A4)<br />
(((A1A2)A3)A4)<br />
<br />
The number of multiplications is dependent on the order, but the result is the same.<br />
<br />
For example:<br />
<table class="nice_table">
  <tr bgcolor="#e5e5e5">
    <td width="100px">Matrix</td>
    <td width="100px">Size</td>
  </tr>
  <tr>
    <td>A1</td>
    <td>30x35</td>
  </tr>
  <tr>
    <td>A2</td>
    <td>35x15</td>
  </tr>
  <tr>
    <td>A3</td>
    <td>15x5</td>
  </tr>
  <tr>
    <td>A4</td>
    <td>5x10</td>
  </tr>
  <tr>
    <td>A5</td>
    <td>10x20</td>
  </tr>
  <tr>
    <td>A6</td>
    <td>20x25</td>
  </tr>
</table>
<br />
The number of multiplications is (outer1_dim * inner_dim * outer2_dim)<br />
<br />
<table class="nice_table">
  <tr bgcolor="#e5e5e5">
    <td colspan="3">(A1(A2(A3(A4)))):</td>
  </tr>
  <tr bgcolor="#e5e5e5">
    <td>prev</td>
    <td>curr</td>
    <td>cost</td>
  </tr>
  <tr>
    <td width="300px">(30x35(35x15(15x5(5x10))))</td>
    <td width="300px">(30x35(35x15(15x10)))</td>
    <td width="300px">750</td>
  </tr>
  <tr>
    <td>(30x35(35x15(15x10)))</td>
    <td>(30x35(35x10))</td>
    <td>750 + 5250 = 6000</td>
  </tr>
  <tr>
    <td>(30x35(35x10))</td>
    <td>30x10</td>
    <td>6000 + 10500 = 16500</td>
  </tr>
</table>
<br />
<table class="nice_table">
  <tr bgcolor="#e5e5e5">
    <td colspan="3">((A1A2)(A3A4)):</td>
  </tr>
  <tr bgcolor="#e5e5e5">
    <td>prev</td>
    <td>curr</td>
    <td>cost</td>
  </tr>
  <tr>
    <td width="300px">(((30x35)(35x15))((15x5)(5x10)))</td>
    <td width="300px">(30x15)(15x10)</td>
    <td width="300px">15750 + 750 = 16500</td>
  </tr>
  <tr>
    <td>(30x15)(15x10)</td>
    <td>30x10</td>
    <td>16500 + 4500 = 21000</td>
  </tr>
</table>
<br />
m_matrix:<br />
<img src="/ads/img/pict/MatrixChain_0.bmp" alt="MatrixChain" /><br />
<br />
s_matrix:<br />
<img src="/ads/img/pict/MatrixChain_1.bmp" alt="MatrixChain" /><br />
<br />
m[2,5] = min:
<ul>
  <li>m[2,2] + m[3,5] + p1p2p5</li>
  <li>m[2,3] + m[4,5] + p1p3p5</li>
  <li>m[2,4] + m[5,5] + p1p4p5</li>
</ul>
<br />
m[2,5] represents the minimum way to compute the subgroup: A2-A5<br />
<br />
<table class="nice_table">
  <tr bgcolor="#e5e5e5">
    <td>Original Formula</td>
    <td>Broken out</td>
  </tr>
  <tr>
    <td width="250px">m[2,2] + m[3,5] + p1p2p5</td>
    <td width="400px">min(A2)+min(A3xA4xA5) + mult_of_two_mins</td>
  </tr>
  <tr>
    <td width="250px">m[2,3] + m[4,5] + p1p3p5</td>
    <td width="400px">min(A2xA3)+min(A4xA5) + mult_of_two_mins</td>
  </tr>
  <tr>
    <td width="250px">m[2,4] + m[5,5] + p1p4p5</td>
    <td width="400px">min(A2xA3xA4)+min(A5) + mult_of_two_mins</td>
  </tr>
</table>
<br />
Once we compute m and s, we start at the stop of the s table and start following the
k downward.<br />
<br />
<b>Matrix Chain Code</b><br />
<div class="code_block">
<div class="code_grey">1:&nbsp;&nbsp;&nbsp;</div><div class="code_comment">// matrixChain.cpp - download <a href="/ads/index.php/dlcode/index/matrixChain.cpp">here</a></div><br /><div class="code_grey">2:&nbsp;&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">vector&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">set&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">iostream&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;&nbsp;</div><div class="code_preproc">#include</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">string&gt;</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">8:&nbsp;&nbsp;&nbsp;</div><div class="code_red">class</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Table&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;&nbsp;</div><div class="code_red">public</div><div class="code_nothing">:</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">set(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">value)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">get(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">12:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">setInfinity(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">13:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">bool</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">getInfinity(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">14:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">print(</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">string&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">15:&nbsp;&nbsp;</div><div class="code_red">private</div><div class="code_nothing">:</div><div class="code_nothing"></div><br /><div class="code_grey">16:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">expand(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">17:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_data;</div><div class="code_nothing"></div><br /><div class="code_grey">18:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">set&lt;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">pair&lt;</div><div class="code_nothing">int,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_inf;</div><div class="code_nothing"></div><br /><div class="code_grey">19:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">20:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">21:&nbsp;&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Table:</div><div class="code_nothing">:</div><div class="code_nothing">expand(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing"></div><br /><div class="code_grey">22:&nbsp;&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">23:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">while</div><div class="code_nothing">(</div><div class="code_nothing">m_data.size(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">24:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_data.push_back(</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">(</div><div class="code_nothing">)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">25:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">26:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">&</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">row&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_data[</div><div class="code_nothing">x]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">27:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">while</div><div class="code_nothing">(</div><div class="code_nothing">row.size(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">28:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">row.push_back(</div><div class="code_nothing">0)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">29:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">30:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">31:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">32:&nbsp;&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Table:</div><div class="code_nothing">:</div><div class="code_nothing">set(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">value)</div><div class="code_nothing"></div><br /><div class="code_grey">33:&nbsp;&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">34:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">expand(</div><div class="code_nothing">x,&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">35:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_data[</div><div class="code_nothing">x]</div><div class="code_nothing">[</div><div class="code_nothing">y]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">value;</div><div class="code_nothing"></div><br /><div class="code_grey">36:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">set&lt;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">pair&lt;</div><div class="code_nothing">int,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">:</div><div class="code_nothing">:</div><div class="code_nothing">iterator&nbsp;</div><div class="code_nothing">iter;</div><div class="code_nothing"></div><br /><div class="code_grey">37:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">iter&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_inf.find(</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">pair&lt;</div><div class="code_nothing">int,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">(</div><div class="code_nothing">x,&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">38:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">iter&nbsp;</div><div class="code_nothing">!=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_inf.end(</div><div class="code_nothing">)</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">39:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_inf.erase(</div><div class="code_nothing">iter)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">40:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">41:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">42:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">43:&nbsp;&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Table:</div><div class="code_nothing">:</div><div class="code_nothing">get(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing"></div><br /><div class="code_grey">44:&nbsp;&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">45:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">expand(</div><div class="code_nothing">x,&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">46:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_data[</div><div class="code_nothing">x]</div><div class="code_nothing">[</div><div class="code_nothing">y]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">47:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">48:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">49:&nbsp;&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Table:</div><div class="code_nothing">:</div><div class="code_nothing">setInfinity(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing"></div><br /><div class="code_grey">50:&nbsp;&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">51:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_inf.insert(</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">pair&lt;</div><div class="code_nothing">int,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">(</div><div class="code_nothing">x,&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">52:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">53:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">54:&nbsp;&nbsp;</div><div class="code_green">bool</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Table:</div><div class="code_nothing">:</div><div class="code_nothing">getInfinity(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">x,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing"></div><br /><div class="code_grey">55:&nbsp;&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">56:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">m_inf.find(</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">pair&lt;</div><div class="code_nothing">int,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">(</div><div class="code_nothing">x,&nbsp;</div><div class="code_nothing">y)</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_inf.end(</div><div class="code_nothing">)</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">57:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">false;</div><div class="code_nothing"></div><br /><div class="code_grey">58:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">59:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">true;</div><div class="code_nothing"></div><br /><div class="code_grey">60:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">61:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">62:&nbsp;&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Table:</div><div class="code_nothing">:</div><div class="code_nothing">print(</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">string&nbsp;</div><div class="code_nothing">label)</div><div class="code_nothing"></div><br /><div class="code_grey">63:&nbsp;&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">64:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">label&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl;</div><div class="code_nothing"></div><br /><div class="code_grey">65:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">size_t</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_data.size(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">66:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">inner&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m_data[</div><div class="code_nothing">i]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">67:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">size_t</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">j&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">j&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">inner.size(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++j)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">68:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">inner[</div><div class="code_nothing">j]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"&nbsp;"</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">69:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">70:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">inner.size(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">!=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">71:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl;</div><div class="code_nothing"></div><br /><div class="code_grey">72:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">73:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">74:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">75:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">76:&nbsp;&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">getMults(</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">&</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">index1,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">index2,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">index3)</div><div class="code_nothing"></div><br /><div class="code_grey">77:&nbsp;&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">78:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">ret&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing"></div><br /><div class="code_grey">79:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">ret&nbsp;</div><div class="code_nothing">*=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p[</div><div class="code_nothing">index1]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">80:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">ret&nbsp;</div><div class="code_nothing">*=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p[</div><div class="code_nothing">index2]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">81:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">ret&nbsp;</div><div class="code_nothing">*=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p[</div><div class="code_nothing">index3]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">82:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">ret;</div><div class="code_nothing"></div><br /><div class="code_grey">83:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">84:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">85:&nbsp;&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">matrixChainOrder(</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">&</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p,&nbsp;</div><div class="code_nothing">Table&</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m,&nbsp;</div><div class="code_nothing">Table&</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing"></div><br /><div class="code_grey">86:&nbsp;&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">87:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">n&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p.size(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing"></div><br /><div class="code_grey">88:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">size_t</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">n;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">89:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m.set(</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">0)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">90:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">91:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">l&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">l&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">n;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++l)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">92:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">n&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">l&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++i)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">93:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">j&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">l&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing"></div><br /><div class="code_grey">94:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m.setInfinity(</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">95:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">k&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">k&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">j&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++k)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">96:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"i:&nbsp;"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"&nbsp;j:&nbsp;"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">j&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"&nbsp;k:&nbsp;"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">k&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"&nbsp;l:&nbsp;"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">l;</div><div class="code_nothing"></div><br /><div class="code_grey">97:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">bool</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">q_is_inf&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">false;</div><div class="code_nothing"></div><br /><div class="code_grey">98:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">m.getInfinity(</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">k)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">||&nbsp;</div><div class="code_nothing">m.getInfinity(</div><div class="code_nothing">k+1,&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">99:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">q_is_inf&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">true;</div><div class="code_nothing"></div><br /><div class="code_grey">100:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">101:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">q_is_inf)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">102:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl;</div><div class="code_nothing"></div><br /><div class="code_grey">103:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">continue;</div><div class="code_nothing"></div><br /><div class="code_grey">104:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">105:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">q&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m.get(</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">k)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">m.get(</div><div class="code_nothing">k+1,&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">getMults(</div><div class="code_nothing">p,&nbsp;</div><div class="code_nothing">i-1,&nbsp;</div><div class="code_nothing">k,&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">106:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"&nbsp;m[i="</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">",k="</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">k&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"]="</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">107:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m.get(</div><div class="code_nothing">i,k)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"&nbsp;m[k+1="</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">k+1&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">",j="</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">108:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">j&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"]="</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m.get(</div><div class="code_nothing">k+1,j)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">109:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"&nbsp;mults("</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i-1&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">","</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">k&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">","</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">j;</div><div class="code_nothing"></div><br /><div class="code_grey">110:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">")="</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">getMults(</div><div class="code_nothing">p,&nbsp;</div><div class="code_nothing">i-1,&nbsp;</div><div class="code_nothing">k,&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">111:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">m.getInfinity(</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">||&nbsp;</div><div class="code_nothing">q&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m.get(</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">112:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m.set(</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">j,&nbsp;</div><div class="code_nothing">q)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">113:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">s.set(</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">j,&nbsp;</div><div class="code_nothing">k)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">114:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">115:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"&nbsp;q:&nbsp;"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">q&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"&nbsp;is&nbsp;less&nbsp;than&nbsp;m[i,j]"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl;</div><div class="code_nothing"></div><br /><div class="code_grey">116:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">&nbsp;</div><div class="code_red">else</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">117:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl;</div><div class="code_nothing"></div><br /><div class="code_grey">118:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">119:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">120:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">121:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">122:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">123:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">124:&nbsp;</div><div class="code_green">void</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">printOptimalParens(</div><div class="code_nothing">Table&</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">s,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i,&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing"></div><br /><div class="code_grey">125:&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">126:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=</div><div class="code_nothing">=</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">127:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"A"</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">i;</div><div class="code_nothing"></div><br /><div class="code_grey">128:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">&nbsp;</div><div class="code_red">else</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">129:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">"("</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">130:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">printOptimalParens(</div><div class="code_nothing">s,&nbsp;</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">s.get(</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">131:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">printOptimalParens(</div><div class="code_nothing">s,&nbsp;</div><div class="code_nothing">s.get(</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">1,&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">132:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_string">")"</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">133:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">134:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">135:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">136:&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">main(</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">argc,&nbsp;</div><div class="code_green">char</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">*&nbsp;</div><div class="code_nothing">argv[</div><div class="code_nothing">]</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">137:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">138:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">vector&lt;</div><div class="code_green">int</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p;</div><div class="code_nothing"></div><br /><div class="code_grey">139:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">140:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p.push_back(</div><div class="code_nothing">30)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">141:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p.push_back(</div><div class="code_nothing">35)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">142:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p.push_back(</div><div class="code_nothing">15)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">143:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p.push_back(</div><div class="code_nothing">5)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">144:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p.push_back(</div><div class="code_nothing">10)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">145:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p.push_back(</div><div class="code_nothing">20)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">146:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p.push_back(</div><div class="code_nothing">25)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">147:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">148:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Table&nbsp;</div><div class="code_nothing">m;</div><div class="code_nothing"></div><br /><div class="code_grey">149:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Table&nbsp;</div><div class="code_nothing">s;</div><div class="code_nothing"></div><br /><div class="code_grey">150:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">151:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">matrixChainOrder(</div><div class="code_nothing">p,&nbsp;</div><div class="code_nothing">m,&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing">;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">152:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m.print(</div><div class="code_string">"m"</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">153:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">s.print(</div><div class="code_string">"s"</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">154:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">printOptimalParens(</div><div class="code_nothing">s,&nbsp;</div><div class="code_nothing">1,&nbsp;</div><div class="code_nothing">p.size(</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">1)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">155:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">cout&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">std:</div><div class="code_nothing">:</div><div class="code_nothing">endl;</div><div class="code_nothing"></div><br /><div class="code_grey">156:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing"></div><br /><div class="code_grey">157:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /></div>
<br />
<b>Matrix Chain Output</b><br />
<div class="algorithm">
<div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">15750&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2625&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">750&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1000&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5000&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">7875&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3</div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6000&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4375&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2500&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3</div><br /><div class="code_grey">12:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6250&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">13:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3500&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">14:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">14875&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">15:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4</div><br /><div class="code_grey">16:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">9375&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">17:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">13000&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">18:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">7125&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">19:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4</div><br /><div class="code_grey">20:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5375&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">21:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4</div><br /><div class="code_grey">22:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4</div><br /><div class="code_grey">23:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">28125&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">24:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">27250&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">25:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">11875&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">26:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5</div><br /><div class="code_grey">27:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">18500&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">28:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">10500&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">29:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5</div><br /><div class="code_grey">30:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5</div><br /><div class="code_grey">31:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">36750&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">32:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">32375&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">33:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">q:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">15125&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">less&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing"></div><br /><div class="code_grey">34:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6</div><br /><div class="code_grey">35:&nbsp;</div><div class="code_nothing">i:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">j:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6&nbsp;</div><div class="code_nothing">k:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing">l:</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">6</div><br /><div class="code_grey">36:&nbsp;</div><div class="code_nothing">m</div><br /><div class="code_grey">37:&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">15750&nbsp;</div><div class="code_nothing">7875&nbsp;</div><div class="code_nothing">9375&nbsp;</div><div class="code_nothing">11875&nbsp;</div><div class="code_nothing">15125&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">38:&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">2625&nbsp;</div><div class="code_nothing">4375&nbsp;</div><div class="code_nothing">7125&nbsp;</div><div class="code_nothing">10500&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">39:&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">750&nbsp;</div><div class="code_nothing">2500&nbsp;</div><div class="code_nothing">5375&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">40:&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">1000&nbsp;</div><div class="code_nothing">3500&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">41:&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">5000&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">42:&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">43:&nbsp;</div><div class="code_nothing">s</div><br /><div class="code_grey">44:&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">45:&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">2&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">46:&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">47:&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">4&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">48:&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">5&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">49:&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">(</div><div class="code_nothing">A1(</div><div class="code_nothing">A2A3)</div><div class="code_nothing">)</div><div class="code_nothing">(</div><div class="code_nothing">(</div><div class="code_nothing">A4A5)</div><div class="code_nothing">A6)</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">50:&nbsp;</div><div class="code_nothing"></div><br /></div>
<ul>
  <li>A dynamic programming problem chooses the optimal choices of subproblems.</li>
</ul>
</div>
<div class="section">
<h2>Memoization of Recursive Matrix Chain Algorithm [1]</h2>
Here we use a top-down recursive programming style to solve the matrix-chain example.<br />
<br />
<div class="algorithm">
<div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">memoizedMatrixChain(</div><div class="code_nothing">p)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">n&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">length[</div><div class="code_nothing">p]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">1&nbsp;</div><div class="code_nothing">to&nbsp;</div><div class="code_nothing">n)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_nothing">j&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">to&nbsp;</div><div class="code_nothing">n)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i.j]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">inf;</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">lookupChain(</div><div class="code_nothing">p,&nbsp;</div><div class="code_nothing">1,&nbsp;</div><div class="code_nothing">n)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">lookupChain(</div><div class="code_nothing">p,&nbsp;</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">12:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">inf)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">13:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">14:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">15:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">==&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">16:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing"></div><br /><div class="code_grey">17:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">&nbsp;</div><div class="code_red">else</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">18:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_nothing">k&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">to&nbsp;</div><div class="code_nothing">j-1)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">19:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">q&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">lookupChain(</div><div class="code_nothing">p,&nbsp;</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">k)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">lookupChain(</div><div class="code_nothing">p,&nbsp;</div><div class="code_nothing">k+1,&nbsp;</div><div class="code_nothing">j)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">p[</div><div class="code_nothing">i-1]</div><div class="code_nothing">*p[</div><div class="code_nothing">k]</div><div class="code_nothing">*p[</div><div class="code_nothing">j]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">20:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">q&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">21:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">q;</div><div class="code_nothing"></div><br /><div class="code_grey">22:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">23:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">24:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">25:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m[</div><div class="code_nothing">i,j]</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">26:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /></div>
</div>
<div class="section">
<h2>Greedy Algorithms: Activity-Selection Problem [1]</h2>
Activity-Selection Problem: Select the maximum-sized subset of mutually compatible activities.<br />
<br />
<table class="nice_table">
  <tr>
    <td bgcolor="#e5e5e5">i</td>
    <td>1</td>
    <td>2</td>
    <td>3</td>
    <td>4</td>
    <td>5</td>
    <td>6</td>
    <td>7</td>
    <td>8</td>
    <td>9</td>
    <td>10</td>
    <td>11</td>
  </tr>
  <tr>
    <td bgcolor="#e5e5e5">start_time</td>    
    <td>1</td>
    <td>3</td>
    <td>0</td>
    <td>5</td>
    <td>3</td>
    <td>5</td>
    <td>6</td>
    <td>8</td>
    <td>8</td>
    <td>2</td>
    <td>12</td>
  </tr>
  <tr>
    <td bgcolor="#e5e5e5">end_time</td>    
    <td>4</td>
    <td>5</td>
    <td>6</td>
    <td>7</td>
    <td>8</td>
    <td>9</td>
    <td>10</td>
    <td>11</td>
    <td>12</td>
    <td>13</td>
    <td>14</td>
  </tr>
</table>
<br />
<b>Recursive Solution</b>
We can find the maximum subset by recursively splitting the problem into two parts and finding the optimal solution there:<br />
<br />
<ul>
  <li>A_ij = A_ik union {ak} union A_kj</li>
</ul>
We do not know the value of k. We could use a bottoms up method of finding all the possibilies and putting them in a table.<br />
<br />
Theorem 16.1 [1]:<br />
Consider any non-empty subproblem S_ij, and let a_m be the activity in S_ij with the earliest finish time.<br />
<br />
Then:<br />
<ol>
  <li>Activity a_m is used in some maximum-size subset of mutually compatible activities of S_ij.</li>
  <li>The subproblem S_im is empty</li>
</ol>
Proof: If S_im is not empty, then a_m cannot be in S_mj<br />
<br />
This theorem implies that we only need to take one possible sub-problem. Therefore we don't need to use bottom's up dynamic programming.<br />
<br />
<b>Top-down recursive greedy algorithm</b>
<div class="algorithm">
<div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">recursiveActivitySelector(</div><div class="code_nothing">s,&nbsp;</div><div class="code_nothing">f,&nbsp;</div><div class="code_nothing">i,&nbsp;</div><div class="code_nothing">n)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">m&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">while</div><div class="code_nothing">(</div><div class="code_nothing">m&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">n&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">s[</div><div class="code_nothing">m]</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">f[</div><div class="code_nothing">i]</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++m;</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">m&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">n)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing">a_m}</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">union&nbsp;</div><div class="code_nothing">recursiveActivitySelector(</div><div class="code_nothing">s,&nbsp;</div><div class="code_nothing">f,&nbsp;</div><div class="code_nothing">m,&nbsp;</div><div class="code_nothing">n)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">&nbsp;</div><div class="code_red">else</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /></div>
Example:<br />
<br />
<table class="nice_table">
  <tr bgcolor="#e5e5e5">
    <td width="200px">Active Activities</td>
    <td width="400px">Proposed Active</td>
  </tr>
  <tr>
    <td>A_1</td>
    <td>A_2. start_2 is before finish_1</td>
  </tr>
  <tr>
    <td>A_1</td>
    <td>A_3. start_3 is before finish_1</td>
  </tr>
  <tr>
    <td>A_1</td>
    <td>A_4. start_4 after finish_1</td>
  </tr>
  <tr>
    <td>A_1, A_4</td>
    <td>A_5. start_5 is before finish_4</td>
  </tr>
  <tr>
    <td>A_1, A_4</td>
    <td>A_6. start_6 is before finish_4</td>
  </tr>
  <tr>
    <td>A_1, A_4</td>
    <td>A_7. start_7 is before finish_4</td>
  </tr>
  <tr>
    <td>A_1, A_4</td>
    <td>A_8. start_8 is after finish_4</td>
  </tr>
  <tr>
    <td>A_1, A_4, A_8</td>
    <td>A_9. start_9 is before finish_8</td>
  </tr>
  <tr>
    <td>A_1, A_4, A_8</td>
    <td>A_10. start_10 is before finish_8</td>
  </tr>
  <tr>
    <td>A_1, A_4, A_8</td>
    <td>A_11. start_11 is after finish_8</td>
  </tr>
  <tr>
    <td>A_1, A_4, A_8, A_11</td>
    <td></td>
  </tr>
</table>
</div>
<div class="section">
<h2>Dynamic Programming vs. Greedy Algorithms [1]</h2>
<b>Dynamic programming</b>
<ul>
  <li>Optimal substructure:
    <ul><li>For a given problem, you are given a choice that leads to the optimal solution. You do not know how to obtain this best choice yet</li></ul>
  </li>
  <li>Overlapping subproblems:
    <ul><li>A recursive program will solve the same sub-problems over and over</li></ul>
  </li>
</ul>
<br />
<b>Greedy strategy</b>
<ul>
  <li>Greedy choice:
    <ul>
      <li>Prove that at any stage of the recursion, one of the optimal choices is the greedy choice</li>
      <li>Show that all but one of the subproblems made by having the greedy choice are emtpy</li>
    </ul>
  </li>
</ul>
</div>
<div class="section">
<h2>References</h2>
<ol>
  <li>Cormen, Leiserson, Rivest, Stein, "Introduction to Algorithms", Second Edition. Chapters 15 and 16</li>
</div>


      </div>
    </div>
  </body>
</html>
