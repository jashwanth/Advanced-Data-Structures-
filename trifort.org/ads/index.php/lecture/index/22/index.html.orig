<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>cse674 - advanced data strucures</title>
  <link href="/css/styles.css" rel="stylesheet" type="text/css"></link>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
  <link rel="shortcut icon" href="/cse382/img/favicon2.ico" />
  </head>
  <body>
    <div class="page_block1">
      <div class="page_block2">
        <div class="section">
          <h1>22: computer graphics algorithms</h1>
          Line-Line Intersection | Multiple Line Intersection | Closest Pair of Points<br />
          Point in Polygon | Convex Hull | Flood Fill<br />
        </div>
<div class="section">
<h2>Line-Line Intersection [1]</h2>
A naive approach to solving this problem is to take two line segments, use the y=mx+b equation and solve where the lines intersect.
<ul>
  <li>This requires a division of floating point numbers and if the segments are nearly parallel, round-off errors can degrade the accuracy</li>
</ul>
A more accurate version uses cross-products.
<h3>Cross Product</h3>
The cross product of points p1 and p2 is the signed area of the parallelogram formed by the points:
<ul>
  <li>0,0</li>
  <li>p1 = (p1.x, p1.y)</li>
  <li>p2 = (p2.x, p2.y)</li>
  <li>p1 + p2 = (p1.x + p2.x, p1.y + p2.y)</li>
</ul>
If the cross product is positive, then p2 is clockwise from p1 and the origin. If it is negative, then p2 is counter-clockwise from p1 and the origin.<br />
<br />
The cross product can be expressed at the determinate of a matrix:<br />
p1 X p2 = x1y2 - x2y1;<br />
<br />
To include a third point that is not the origin, we offset everything by a value p0:<br />
(p1 - p0) X (p2 - p0) = (x1 - x0)*(y2 - y0) - (x2 - x0)*(y1 - y0);<br />
<br />
We then use the directions to determine if two lines intersect.
<div class="algorithm">
<div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">segmentsIntersect(</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">p1,&nbsp;</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">p2,&nbsp;</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">p3,&nbsp;</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">p4)</div><div class="code_nothing"></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">d1&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">direction(</div><div class="code_nothing">p3,&nbsp;</div><div class="code_nothing">p4,&nbsp;</div><div class="code_nothing">p1)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">d2&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">direction(</div><div class="code_nothing">p3,&nbsp;</div><div class="code_nothing">p4,&nbsp;</div><div class="code_nothing">p2)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">d3&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">direction(</div><div class="code_nothing">p1,&nbsp;</div><div class="code_nothing">p2,&nbsp;</div><div class="code_nothing">p3)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">d4&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">direction(</div><div class="code_nothing">p1,&nbsp;</div><div class="code_nothing">p2,&nbsp;</div><div class="code_nothing">p4)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">d1&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">d2&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">or</div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">d1&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">d2&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">and</div><br /><div class="code_grey">11:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">12:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">d3&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">d4&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">or</div><br /><div class="code_grey">13:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">d3&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">d4&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">0)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">14:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">15:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">true;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">16:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">17:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">d1&nbsp;</div><div class="code_nothing">==&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">onSegment(</div><div class="code_nothing">p3,&nbsp;</div><div class="code_nothing">p4,&nbsp;</div><div class="code_nothing">p1)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">18:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">true;</div><div class="code_nothing"></div><br /><div class="code_grey">19:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">d2&nbsp;</div><div class="code_nothing">==&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">onSegment(</div><div class="code_nothing">p3,&nbsp;</div><div class="code_nothing">p4,&nbsp;</div><div class="code_nothing">p2)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">20:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">true;</div><div class="code_nothing"></div><br /><div class="code_grey">21:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">d3&nbsp;</div><div class="code_nothing">==&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">onSegment(</div><div class="code_nothing">p1,&nbsp;</div><div class="code_nothing">p2,&nbsp;</div><div class="code_nothing">p3)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">22:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">true;</div><div class="code_nothing"></div><br /><div class="code_grey">23:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">d4&nbsp;</div><div class="code_nothing">==&nbsp;</div><div class="code_nothing">0&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">onSegment(</div><div class="code_nothing">p1,&nbsp;</div><div class="code_nothing">p2,&nbsp;</div><div class="code_nothing">p4)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">24:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">true;</div><div class="code_nothing"></div><br /><div class="code_grey">25:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">26:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">false;</div><div class="code_nothing"></div><br /><div class="code_grey">27:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">28:&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">direction(</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">p_i,&nbsp;</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">p_j,&nbsp;</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">p_k)</div><div class="code_nothing"></div><br /><div class="code_grey">29:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">(</div><div class="code_nothing">p_k.x&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">p_i.x)</div><div class="code_nothing">*(</div><div class="code_nothing">p_j.y&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">p_i.y)</div><div class="code_nothing">)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">(</div><div class="code_nothing">(</div><div class="code_nothing">p_j.x&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">p_i.x)</div><div class="code_nothing">*(</div><div class="code_nothing">p_k.y&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">p_i.y)</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">30:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">31:&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">onSegment(</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">p_i,&nbsp;</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">p_j,&nbsp;</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">p_k)</div><div class="code_nothing"></div><br /><div class="code_grey">32:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">min(</div><div class="code_nothing">p_i.x,&nbsp;</div><div class="code_nothing">p_j.x)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"><=&nbsp;</div><div class="code_nothing">p_k.x&nbsp;</div><div class="code_nothing"><=&nbsp;</div><div class="code_nothing">max(</div><div class="code_nothing">p_i.x,&nbsp;</div><div class="code_nothing">p_j.x)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">and</div><br /><div class="code_grey">33:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">min(</div><div class="code_nothing">p_i.y,&nbsp;</div><div class="code_nothing">p_j.y)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"><=&nbsp;</div><div class="code_nothing">p_k.y&nbsp;</div><div class="code_nothing"><=&nbsp;</div><div class="code_nothing">max(</div><div class="code_nothing">p_i.y,&nbsp;</div><div class="code_nothing">p_j.y)</div><div class="code_nothing">)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">34:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">true;</div><div class="code_nothing"></div><br /><div class="code_grey">35:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">36:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">false;</div><div class="code_nothing"></div><br /></div>
Cases:
<ol>
  <li>Neither conditions cross:<br />
    <img src="/ads/img/pict/SegmentsIntersect_0.bmp" alt="SegmentsIntersect" />
  </li>
  <li>One condition crosses:<br />
    <img src="/ads/img/pict/SegmentsIntersect_1.bmp" alt="SegmentsIntersect" />
  </li>
  <li>Both conditions cross:<br />
    <img src="/ads/img/pict/SegmentsIntersect_2.bmp" alt="SegmentsIntersect" />
  </li>
</ol>
</div>
<div class="section">
<h2>Multiple Line Intersection [1]</h2>
A naive algorithm for multiple line intersection takes O(n^2) time.<br />
<br />
If we sort the endpoints by the x coordinate and use a sweep line, it takes O(nlgn) time.<br />
<br />
<img src="/ads/img/pict/MultLineIntersect_0.bmp" alt="MultLineIntersect" /><br />
<br />
<br />
Algorithm:
<div class="algorithm">
<div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">anySegmentsIntersect(</div><div class="code_nothing">S)</div><div class="code_nothing"></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">T&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">sort&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">endpoints&nbsp;</div><div class="code_nothing">in&nbsp;</div><div class="code_nothing">S&nbsp;</div><div class="code_nothing">from&nbsp;</div><div class="code_nothing">left&nbsp;</div><div class="code_nothing">to&nbsp;</div><div class="code_nothing">right;</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">each&nbsp;</div><div class="code_nothing">point&nbsp;</div><div class="code_nothing">p&nbsp;</div><div class="code_nothing">in&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">sorted&nbsp;</div><div class="code_nothing">list&nbsp;</div><div class="code_nothing">of&nbsp;</div><div class="code_nothing">endpoints</div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">p&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">left&nbsp;</div><div class="code_nothing">endpoint&nbsp;</div><div class="code_nothing">of&nbsp;</div><div class="code_nothing">a&nbsp;</div><div class="code_nothing">segment&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">insert(</div><div class="code_nothing">T,&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">above(</div><div class="code_nothing">T,&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">exists&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">intersects&nbsp;</div><div class="code_nothing">s&nbsp;</div><div class="code_nothing">or</div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">below(</div><div class="code_nothing">T,&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">exists&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">intersects&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">true;</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">p&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">right&nbsp;</div><div class="code_nothing">endpoint&nbsp;</div><div class="code_nothing">of&nbsp;</div><div class="code_nothing">a&nbsp;</div><div class="code_nothing">segment&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">both&nbsp;</div><div class="code_nothing">above(</div><div class="code_nothing">T,&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">below(</div><div class="code_nothing">T,&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">exist&nbsp;</div><div class="code_nothing">and</div><br /><div class="code_grey">12:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">above(</div><div class="code_nothing">T,&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">intersects&nbsp;</div><div class="code_nothing">below(</div><div class="code_nothing">T,&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">13:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">true;</div><div class="code_nothing"></div><br /><div class="code_grey">14:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">delete</div><div class="code_nothing">(</div><div class="code_nothing">T,&nbsp;</div><div class="code_nothing">s)</div><div class="code_nothing"></div><br /><div class="code_grey">15:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">false;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /></div>
</div>
<div class="section">
<h2>Finding the closest pair of points [1]</h2>
Here we are trying to find the closes pair of points in a set of points.<br />
<br />
A naive algorithm checks all the points with each other and takes O(n^2) time.<br />
<br />
The divide-and-conquer algorithm presented here takes O(nlgn) time.<br />
<br />
<div class="algorithm">
<div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">closestPair(</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">Point&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">P)</div><div class="code_nothing"></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">X&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">create&nbsp;</div><div class="code_nothing">a&nbsp;</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">Point&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">sorted&nbsp;</div><div class="code_nothing">by&nbsp;</div><div class="code_nothing">ascending&nbsp;</div><div class="code_nothing">x&nbsp;</div><div class="code_nothing">coordinate</div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">Y&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">create&nbsp;</div><div class="code_nothing">a&nbsp;</div><div class="code_nothing">vector&lt;</div><div class="code_nothing">Point&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">sorted&nbsp;</div><div class="code_nothing">by&nbsp;</div><div class="code_nothing">ascending&nbsp;</div><div class="code_nothing">Y&nbsp;</div><div class="code_nothing">coordinate</div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">executeClosestPair(</div><div class="code_nothing">X,&nbsp;</div><div class="code_nothing">Y)</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">executeClosestPair(</div><div class="code_nothing">X,&nbsp;</div><div class="code_nothing">Y)</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">|X|&nbsp;</div><div class="code_nothing"><=&nbsp;</div><div class="code_nothing">3)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">find&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">closest_pair&nbsp;</div><div class="code_nothing">with&nbsp;</div><div class="code_nothing">brute&nbsp;</div><div class="code_nothing">force;</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">closet_pair</div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">12:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">divide&nbsp;</div><div class="code_nothing">X&nbsp;</div><div class="code_nothing">into&nbsp;</div><div class="code_nothing">X_L&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">X_R&nbsp;</div><div class="code_nothing">of&nbsp;</div><div class="code_nothing">equal&nbsp;</div><div class="code_nothing">sizes;</div><div class="code_nothing"></div><br /><div class="code_grey">13:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">while</div><div class="code_nothing">(</div><div class="code_nothing">traversal&nbsp;</div><div class="code_nothing">of&nbsp;</div><div class="code_nothing">Y&nbsp;</div><div class="code_nothing">in&nbsp;</div><div class="code_nothing">ascending&nbsp;</div><div class="code_nothing">order&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">not&nbsp;</div><div class="code_nothing">complete)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">14:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">curr_point&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">in&nbsp;</div><div class="code_nothing">X_L)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">15:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">place&nbsp;</div><div class="code_nothing">curr_point&nbsp;</div><div class="code_nothing">in&nbsp;</div><div class="code_nothing">Y_L;</div><div class="code_nothing"></div><br /><div class="code_grey">16:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">&nbsp;</div><div class="code_red">else</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">17:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">place&nbsp;</div><div class="code_nothing">curr_point&nbsp;</div><div class="code_nothing">in&nbsp;</div><div class="code_nothing">Y_R;</div><div class="code_nothing"></div><br /><div class="code_grey">18:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">19:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">20:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">21:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">closest_pair_L&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">executeClosestPair(</div><div class="code_nothing">X_L,&nbsp;</div><div class="code_nothing">Y_L)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">22:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">closest_pair_R&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">executeClosestPair(</div><div class="code_nothing">X_R,&nbsp;</div><div class="code_nothing">Y_R)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">23:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">24:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">closest&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">closest_pair(</div><div class="code_nothing">closest_pair_L,&nbsp;</div><div class="code_nothing">closest_pair_R)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">25:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">26:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">create&nbsp;</div><div class="code_nothing">Y_prime&nbsp;</div><div class="code_nothing">by&nbsp;</div><div class="code_nothing">choosing&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">points&nbsp;</div><div class="code_nothing">from&nbsp;</div><div class="code_nothing">Y&nbsp;</div><div class="code_nothing">that&nbsp;</div><div class="code_nothing">are&nbsp;</div><div class="code_nothing">min_dist&nbsp;</div><div class="code_nothing">away&nbsp;</div><div class="code_nothing">from&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">divide.</div><br /><div class="code_grey">27:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">28:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">foreach(</div><div class="code_nothing">point&nbsp;</div><div class="code_nothing">p&nbsp;</div><div class="code_nothing">in&nbsp;</div><div class="code_nothing">Y_prime)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">29:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">foreach(</div><div class="code_nothing">7&nbsp;</div><div class="code_nothing">points&nbsp;</div><div class="code_nothing">following&nbsp;</div><div class="code_nothing">p)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">30:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">new_pair&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">closer&nbsp;</div><div class="code_nothing">than&nbsp;</div><div class="code_nothing">closest)</div><div class="code_nothing">{</div><div class="code_nothing"></div><br /><div class="code_grey">31:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">closest&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">dist(</div><div class="code_nothing">new_pair)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">32:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">33:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">34:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /><div class="code_grey">35:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">36:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">closest;</div><div class="code_nothing"></div><br /><div class="code_grey">37:&nbsp;</div><div class="code_nothing">}</div><div class="code_nothing"></div><br /></div>
Finding the closest pair with each of the points in P_L and P_R takes O(n^2) naively. It can be shown that only 4 points on each side of Y_L and Y_R need to be checked because of the min property.<br />
<br />
</div>
<div class="section">
<h2>Point in polygon [2]</h2>
Point in polygon is very useful for mouse hit code inside a graphical editor with arbirtary shapes to be selected with the mouse. The shape is the polygon and the point is the mouse coordinate.<br />
<br />
It is easy to figure out point inside a square or rectangle. Points inside a arbitrary polygon need a more complicated algorithm.<br />
<br />
<img src="/ads/img/pict/PointInPolygon_0.bmp" alt="PointInPolygon" /><br />
<img src="/ads/img/pict/PointInPolygon_1.bmp" alt="PointInPolygon" /><br />
<br />
The crossing number algorithm determines the number of times a ray crosses the polygon borders. If the crossing number is even, the point is outside the polygon, if it is odd, it is inside.
<div class="algorithm">
<div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">crossingNumber(</div><div class="code_nothing">Polygon&nbsp;</div><div class="code_nothing">p,&nbsp;</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">mouse_click)</div><div class="code_nothing"></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_green">int</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">cn&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">0;</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">each&nbsp;</div><div class="code_nothing">edge&nbsp;</div><div class="code_nothing">in&nbsp;</div><div class="code_nothing">p</div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">crossesUpward(</div><div class="code_nothing">edge,&nbsp;</div><div class="code_nothing">mouse_click)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">||&nbsp;</div><div class="code_nothing">crossesDownward(</div><div class="code_nothing">edge,&nbsp;</div><div class="code_nothing">mouse_click)</div><div class="code_nothing">)</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">edge&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">to&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">right&nbsp;</div><div class="code_nothing">of&nbsp;</div><div class="code_nothing">mouse_click)</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">++cn</div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">cn&nbsp;</div><div class="code_nothing">&&nbsp;</div><div class="code_nothing">1;</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">crossesUpward(</div><div class="code_nothing">Edge&nbsp;</div><div class="code_nothing">edge,&nbsp;</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">p)</div><div class="code_nothing"></div><br /><div class="code_grey">12:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">edge.p1.y&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">p.y&nbsp;</div><div class="code_nothing">&&&nbsp;</div><div class="code_nothing">edge.p2.y&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p.y)</div><div class="code_nothing"></div><br /><div class="code_grey">13:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">true;</div><div class="code_nothing"></div><br /><div class="code_grey">14:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">false;</div><div class="code_nothing"></div><br /><div class="code_grey">15:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">16:&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">crossesDownward(</div><div class="code_nothing">Edge&nbsp;</div><div class="code_nothing">edge,&nbsp;</div><div class="code_nothing">Point&nbsp;</div><div class="code_nothing">p)</div><div class="code_nothing"></div><br /><div class="code_grey">17:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">(</div><div class="code_nothing">edge.p2.y&nbsp;</div><div class="code_nothing">&lt;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">p.y&nbsp;</div><div class="code_nothing">&&&nbsp;</div><div class="code_nothing">edge.p1.y&nbsp;</div><div class="code_nothing">&gt;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p.y)</div><div class="code_nothing"></div><br /><div class="code_grey">18:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">true;</div><div class="code_nothing"></div><br /><div class="code_grey">19:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">false;</div><div class="code_nothing"></div><br /><div class="code_grey">20:&nbsp;</div><div class="code_nothing"></div><br /></div>
</div>
<div class="section">
<h2>Convex Hull [1]</h2>
Graham's-scan takes O(nlgn) time
<div class="algorithm">
<div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">grahamsScan(</div><div class="code_nothing">Points&nbsp;</div><div class="code_nothing">q)</div><div class="code_nothing"></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p0&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">point&nbsp;</div><div class="code_nothing">in&nbsp;</div><div class="code_nothing">q&nbsp;</div><div class="code_nothing">with&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">min&nbsp;</div><div class="code_nothing">y&nbsp;</div><div class="code_nothing">coordinate</div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">p1,&nbsp;</div><div class="code_nothing">p2,&nbsp;</div><div class="code_nothing">pm&nbsp;</div><div class="code_nothing">are&nbsp;</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">remaining&nbsp;</div><div class="code_nothing">points&nbsp;</div><div class="code_nothing">in&nbsp;</div><div class="code_nothing">q,&nbsp;</div><div class="code_nothing">sorted&nbsp;</div><div class="code_nothing">by&nbsp;</div><div class="code_nothing">polar&nbsp;</div><div class="code_nothing">angle&nbsp;</div><div class="code_nothing">in&nbsp;</div><div class="code_nothing">counterclockwise&nbsp;</div><div class="code_nothing">order&nbsp;</div><div class="code_nothing">around&nbsp;</div><div class="code_nothing">p0</div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">push(</div><div class="code_nothing">p0,&nbsp;</div><div class="code_nothing">S)</div><div class="code_nothing"></div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">push(</div><div class="code_nothing">p1,&nbsp;</div><div class="code_nothing">S)</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">push(</div><div class="code_nothing">p2,&nbsp;</div><div class="code_nothing">S)</div><div class="code_nothing"></div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">for</div><div class="code_nothing">(</div><div class="code_nothing">i&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">3&nbsp;</div><div class="code_nothing">to&nbsp;</div><div class="code_nothing">m)</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">while</div><div class="code_nothing">(</div><div class="code_nothing">the&nbsp;</div><div class="code_nothing">angle&nbsp;</div><div class="code_nothing">formed&nbsp;</div><div class="code_nothing">by&nbsp;</div><div class="code_nothing">points&nbsp;</div><div class="code_nothing">NextToTop(</div><div class="code_nothing">S)</div><div class="code_nothing">,&nbsp;</div><div class="code_nothing">Top(</div><div class="code_nothing">S)</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">p_i&nbsp;</div><div class="code_nothing">make&nbsp;</div><div class="code_nothing">a&nbsp;</div><div class="code_nothing">nonleft&nbsp;</div><div class="code_nothing">turn)</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">pop(</div><div class="code_nothing">S)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">push(</div><div class="code_nothing">p_i,&nbsp;</div><div class="code_nothing">S)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">12:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">return</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">S;</div><div class="code_nothing"></div><br /></div>
</div>
<div class="section">
<h2>Flood Fill</h2>
Flood Fill is an algorithm used to fill in an area in a image that has similar colors to a seed point.
<div class="algorithm">
<div class="code_grey">1:&nbsp;&nbsp;</div><div class="code_red">algorithm</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">floodFill(</div><div class="code_nothing">bitmap&nbsp;</div><div class="code_nothing">bmp,&nbsp;</div><div class="code_nothing">point&nbsp;</div><div class="code_nothing">seed)</div><div class="code_nothing"></div><br /><div class="code_grey">2:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">enqueue&nbsp;</div><div class="code_nothing">seed;</div><div class="code_nothing"></div><br /><div class="code_grey">3:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">while</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">queue&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">not&nbsp;</div><div class="code_nothing">empty</div><br /><div class="code_grey">4:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr&nbsp;</div><div class="code_nothing">=&nbsp;</div><div class="code_nothing">dequeue(</div><div class="code_nothing">)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">5:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_red">if</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">curr&nbsp;</div><div class="code_nothing">is&nbsp;</div><div class="code_nothing">visited</div><br /><div class="code_grey">6:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">continue;</div><div class="code_nothing"></div><br /><div class="code_grey">7:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">visit&nbsp;</div><div class="code_nothing">curr&nbsp;</div><div class="code_nothing">and&nbsp;</div><div class="code_nothing">mark&nbsp;</div><div class="code_nothing">curr&nbsp;</div><div class="code_nothing">visited;</div><div class="code_nothing"></div><br /><div class="code_grey">8:&nbsp;&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">9:&nbsp;&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">enqueue(</div><div class="code_nothing">curr.x&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">1,&nbsp;</div><div class="code_nothing">curr.y&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">1)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">10:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">enqueue(</div><div class="code_nothing">curr.x&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">0,&nbsp;</div><div class="code_nothing">curr.y&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">1)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">11:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">enqueue(</div><div class="code_nothing">curr.x&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">1,&nbsp;</div><div class="code_nothing">curr.y&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">1)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">12:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">13:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">enqueue(</div><div class="code_nothing">curr.x&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">1,&nbsp;</div><div class="code_nothing">curr.y&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">0)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">14:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">enqueue(</div><div class="code_nothing">curr.x&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">1,&nbsp;</div><div class="code_nothing">curr.y&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">0)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">15:&nbsp;</div><div class="code_nothing"></div><br /><div class="code_grey">16:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">enqueue(</div><div class="code_nothing">curr.x&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">1,&nbsp;</div><div class="code_nothing">curr.y&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">1)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">17:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">enqueue(</div><div class="code_nothing">curr.x&nbsp;</div><div class="code_nothing">+&nbsp;</div><div class="code_nothing">0,&nbsp;</div><div class="code_nothing">curr.y&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">1)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /><div class="code_grey">18:&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">&nbsp;</div><div class="code_nothing">enqueue(</div><div class="code_nothing">curr.x&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">1,&nbsp;</div><div class="code_nothing">curr.y&nbsp;</div><div class="code_nothing">-&nbsp;</div><div class="code_nothing">1)</div><div class="code_nothing">;</div><div class="code_nothing"></div><br /></div>
<img src="/ads/img/pict/FloodFill_0.bmp" alt="FloodFill" /> 
<img src="/ads/img/pict/FloodFill_1.bmp" alt="FloodFill" /><br />
</div>
<div class="section">
<h2>References</h2>
<ol>
  <li>Introduction to Algorithms, Cormen, Leiserson, Rivest and Stein. Chapter 33.</li>
  <li>http://softsurfer.com/Archive/algorithm_0103/algorithm_0103.htm</li>
  <li>http://en.wikipedia.org/wiki/Line-line_intersection</li>
  <li>http://en.wikipedia.org/wiki/Closest_pair_of_points_problem</li>
  <li>http://en.wikipedia.org/wiki/Delaunay_triangulation</li>
</ol>
</div>
      </div>
    </div>
  </body>
</html>
